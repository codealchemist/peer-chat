// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Chat should not redirect to / 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <WithStyles(Connect(Chat))
    history={
      Object {
        "push": [MockFunction],
      }
    }
  >
    <Connect(Chat)
      classes={
        Object {
          "progress": "Connect-Chat--progress-1",
        }
      }
      history={
        Object {
          "push": [MockFunction],
        }
      }
    >
      <Chat
        classes={
          Object {
            "progress": "Connect-Chat--progress-1",
          }
        }
        history={
          Object {
            "push": [MockFunction],
          }
        }
        isInitiator={true}
        messages={Array []}
        notifications={Array []}
        sendClearWritingNotification={[Function]}
        sendMessage={[Function]}
        sendWritingNotification={[Function]}
        user={
          Object {
            "avatar": "metal",
            "id": 42,
            "name": "Dude",
          }
        }
      >
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-dnqmqq",
                  "isStatic": true,
                  "lastClassName": "ieAKfK",
                  "rules": Array [
                    "
  max-width: 640px;
  width: 100%;
  position: absolute;
  height: calc(100% - 20px);
  top: 0;

  @media (max-width: 800px) {
    max-width: 100%;
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-dnqmqq",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-dnqmqq ieAKfK"
            >
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-iwsKbI",
                        "isStatic": true,
                        "lastClassName": "kzxSCd",
                        "rules": Array [
                          "
  display: flex;
  flex-direction: column;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  padding: 20px 20px 0 20px;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-iwsKbI",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-iwsKbI kzxSCd"
                  >
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-gqjmRU",
                              "isStatic": true,
                              "lastClassName": "cUiTuu",
                              "rules": Array [
                                "
  flex: 1;
  overflow: scroll;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-gqjmRU",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-gqjmRU cUiTuu"
                        >
                          <Notification
                            actionButton={
                              <ClipboardButton
                                component="a"
                                onClick={[Function]}
                              >
                                <ForwardRef
                                  id="share-link"
                                >
                                  <WithStyles(Icon)
                                    style={
                                      Object {
                                        "fontSize": "16px",
                                      }
                                    }
                                  >
                                    insert_link
                                  </WithStyles(Icon)>
                                </ForwardRef>
                              </ClipboardButton>
                            }
                            date={2019-02-04T23:55:17.782Z}
                            text="Dude created chat."
                          >
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-ifAKCX",
                                      "isStatic": true,
                                      "lastClassName": "hkAyvq",
                                      "rules": Array [
                                        "
  display: flex;
  margin-bottom: 5px;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-ifAKCX",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="sc-ifAKCX hkAyvq"
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-EHOje",
                                            "isStatic": true,
                                            "lastClassName": "hsXxjJ",
                                            "rules": Array [
                                              "
  width: 50%;
  display: flex;
  width: 100%;
  margin: 0 10px;
  justify-content: center;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-EHOje",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-EHOje hsXxjJ"
                                      >
                                        <styled.div>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-gzVnrw",
                                                  "isStatic": true,
                                                  "lastClassName": "gDmTXO",
                                                  "rules": Array [
                                                    "
  width: 50%;
  background: ",
                                                    "rgba(255, 255, 255, 0.5)",
                                                    ";
  padding: 20px 10px 5px 10px;
  border-radius: 2px;
  min-width: 220px;
  position: relative;
  display: flex;
  justify-content: space-between;

  > p {
    color: #222;
    font-size: 0.85rem;
    font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;
    font-weight: 400;
    margin: 0;
  }

  :before {
    content: '';
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 12px 0 12px 15px;
    border-color: transparent transparent transparent ",
                                                    "rgba(255, 255, 255, 0.5)",
                                                    ";
    position: absolute;
    top: 0;
    right: -15px;
    bottom: 0;
    margin: auto;
  }

  :after {
    content: '';
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 12px 15px 12px 0;
    border-color: transparent ",
                                                    "rgba(255, 255, 255, 0.5)",
                                                    " transparent transparent;
    position: absolute;
    top: 0;
    left: -15px;
    bottom: 0;
    margin: auto;
  }
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-gzVnrw",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-gzVnrw gDmTXO"
                                            >
                                              <styled.div>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-bZQynM",
                                                        "isStatic": true,
                                                        "lastClassName": "gNQKpL",
                                                        "rules": Array [
                                                          "
  position: absolute;
  top: 5px;
  left: 10px;

  p {
    color: #444;
    font-size: 0.75rem;
    font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;
    font-weight: 400;
    letter-spacing: 0.03333em;
    margin: 0;
  }
",
                                                        ],
                                                      },
                                                      "displayName": "styled.div",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-bZQynM",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <div
                                                    className="sc-bZQynM gNQKpL"
                                                  >
                                                    <p>
                                                      February 5th 2019, 12:24:29 pm
                                                    </p>
                                                  </div>
                                                </StyledComponent>
                                              </styled.div>
                                              <p>
                                                Dude created chat.
                                              </p>
                                              <styled.div>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-htoDjs",
                                                        "isStatic": true,
                                                        "lastClassName": "dCWZkl",
                                                        "rules": Array [
                                                          "
  position: absolute;
  top: 2px;
  right: 0px;
",
                                                        ],
                                                      },
                                                      "displayName": "styled.div",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-htoDjs",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <div
                                                    className="sc-htoDjs dCWZkl"
                                                  >
                                                    <ClipboardButton
                                                      component="a"
                                                      onClick={[Function]}
                                                    >
                                                      <a
                                                        className=""
                                                        onClick={[Function]}
                                                        style={Object {}}
                                                      >
                                                        <Styled(WithStyles(IconButton))
                                                          id="share-link"
                                                        >
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "Naked": [Function],
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-jTzLTM",
                                                                  "isStatic": true,
                                                                  "lastClassName": "kokRiH",
                                                                  "rules": Array [
                                                                    "
  position: absolute;
  top: -1px;
  right: 10px;
",
                                                                  ],
                                                                },
                                                                "displayName": "Styled(WithStyles(IconButton))",
                                                                "foldedComponentIds": Array [],
                                                                "options": Object {
                                                                  "defaultTheme": Object {
                                                                    "breakpoints": Object {
                                                                      "between": [Function],
                                                                      "down": [Function],
                                                                      "keys": Array [
                                                                        "xs",
                                                                        "sm",
                                                                        "md",
                                                                        "lg",
                                                                        "xl",
                                                                      ],
                                                                      "only": [Function],
                                                                      "up": [Function],
                                                                      "values": Object {
                                                                        "lg": 1280,
                                                                        "md": 960,
                                                                        "sm": 600,
                                                                        "xl": 1920,
                                                                        "xs": 0,
                                                                      },
                                                                      "width": [Function],
                                                                    },
                                                                    "direction": "ltr",
                                                                    "mixins": Object {
                                                                      "gutters": [Function],
                                                                      "toolbar": Object {
                                                                        "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                          "minHeight": 48,
                                                                        },
                                                                        "@media (min-width:600px)": Object {
                                                                          "minHeight": 64,
                                                                        },
                                                                        "minHeight": 56,
                                                                      },
                                                                    },
                                                                    "overrides": Object {},
                                                                    "palette": Object {
                                                                      "action": Object {
                                                                        "active": "rgba(0, 0, 0, 0.54)",
                                                                        "disabled": "rgba(0, 0, 0, 0.26)",
                                                                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                        "hover": "rgba(0, 0, 0, 0.08)",
                                                                        "hoverOpacity": 0.08,
                                                                        "selected": "rgba(0, 0, 0, 0.14)",
                                                                      },
                                                                      "augmentColor": [Function],
                                                                      "background": Object {
                                                                        "default": "#fafafa",
                                                                        "paper": "#fff",
                                                                      },
                                                                      "common": Object {
                                                                        "black": "#000",
                                                                        "white": "#fff",
                                                                      },
                                                                      "contrastThreshold": 3,
                                                                      "divider": "rgba(0, 0, 0, 0.12)",
                                                                      "error": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#d32f2f",
                                                                        "light": "#e57373",
                                                                        "main": "#f44336",
                                                                      },
                                                                      "getContrastText": [Function],
                                                                      "grey": Object {
                                                                        "100": "#f5f5f5",
                                                                        "200": "#eeeeee",
                                                                        "300": "#e0e0e0",
                                                                        "400": "#bdbdbd",
                                                                        "50": "#fafafa",
                                                                        "500": "#9e9e9e",
                                                                        "600": "#757575",
                                                                        "700": "#616161",
                                                                        "800": "#424242",
                                                                        "900": "#212121",
                                                                        "A100": "#d5d5d5",
                                                                        "A200": "#aaaaaa",
                                                                        "A400": "#303030",
                                                                        "A700": "#616161",
                                                                      },
                                                                      "primary": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#303f9f",
                                                                        "light": "#7986cb",
                                                                        "main": "#3f51b5",
                                                                      },
                                                                      "secondary": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#c51162",
                                                                        "light": "#ff4081",
                                                                        "main": "#f50057",
                                                                      },
                                                                      "text": Object {
                                                                        "disabled": "rgba(0, 0, 0, 0.38)",
                                                                        "hint": "rgba(0, 0, 0, 0.38)",
                                                                        "primary": "rgba(0, 0, 0, 0.87)",
                                                                        "secondary": "rgba(0, 0, 0, 0.54)",
                                                                      },
                                                                      "tonalOffset": 0.2,
                                                                      "type": "light",
                                                                    },
                                                                    "props": Object {},
                                                                    "shadows": Array [
                                                                      "none",
                                                                      "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                                                      "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                                                      "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                                                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                    ],
                                                                    "shape": Object {
                                                                      "borderRadius": 4,
                                                                    },
                                                                    "spacing": Object {
                                                                      "unit": 8,
                                                                    },
                                                                    "transitions": Object {
                                                                      "create": [Function],
                                                                      "duration": Object {
                                                                        "complex": 375,
                                                                        "enteringScreen": 225,
                                                                        "leavingScreen": 195,
                                                                        "short": 250,
                                                                        "shorter": 200,
                                                                        "shortest": 150,
                                                                        "standard": 300,
                                                                      },
                                                                      "easing": Object {
                                                                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                      },
                                                                      "getAutoHeightDuration": [Function],
                                                                    },
                                                                    "typography": Object {
                                                                      "body1": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.46429em",
                                                                      },
                                                                      "body1Next": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.00938em",
                                                                        "lineHeight": 1.5,
                                                                      },
                                                                      "body2": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 500,
                                                                        "lineHeight": "1.71429em",
                                                                      },
                                                                      "body2Next": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.01071em",
                                                                        "lineHeight": 1.5,
                                                                      },
                                                                      "button": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 500,
                                                                        "textTransform": "uppercase",
                                                                      },
                                                                      "buttonNext": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 500,
                                                                        "letterSpacing": "0.02857em",
                                                                        "lineHeight": 1.75,
                                                                        "textTransform": "uppercase",
                                                                      },
                                                                      "caption": Object {
                                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.75rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.375em",
                                                                      },
                                                                      "captionNext": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.75rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.03333em",
                                                                        "lineHeight": 1.66,
                                                                      },
                                                                      "display1": Object {
                                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "2.125rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.20588em",
                                                                      },
                                                                      "display2": Object {
                                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "2.8125rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.13333em",
                                                                        "marginLeft": "-.02em",
                                                                      },
                                                                      "display3": Object {
                                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "3.5rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "-.02em",
                                                                        "lineHeight": "1.30357em",
                                                                        "marginLeft": "-.02em",
                                                                      },
                                                                      "display4": Object {
                                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "7rem",
                                                                        "fontWeight": 300,
                                                                        "letterSpacing": "-.04em",
                                                                        "lineHeight": "1.14286em",
                                                                        "marginLeft": "-.04em",
                                                                      },
                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                      "fontSize": 14,
                                                                      "fontWeightLight": 300,
                                                                      "fontWeightMedium": 500,
                                                                      "fontWeightRegular": 400,
                                                                      "h1": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "6rem",
                                                                        "fontWeight": 300,
                                                                        "letterSpacing": "-0.01562em",
                                                                        "lineHeight": 1,
                                                                      },
                                                                      "h2": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "3.75rem",
                                                                        "fontWeight": 300,
                                                                        "letterSpacing": "-0.00833em",
                                                                        "lineHeight": 1,
                                                                      },
                                                                      "h3": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "3rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0em",
                                                                        "lineHeight": 1.04,
                                                                      },
                                                                      "h4": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "2.125rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.00735em",
                                                                        "lineHeight": 1.17,
                                                                      },
                                                                      "h5": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1.5rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0em",
                                                                        "lineHeight": 1.33,
                                                                      },
                                                                      "h6": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1.25rem",
                                                                        "fontWeight": 500,
                                                                        "letterSpacing": "0.0075em",
                                                                        "lineHeight": 1.6,
                                                                      },
                                                                      "headline": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1.5rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.35417em",
                                                                      },
                                                                      "overline": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.75rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.08333em",
                                                                        "lineHeight": 2.66,
                                                                        "textTransform": "uppercase",
                                                                      },
                                                                      "pxToRem": [Function],
                                                                      "round": [Function],
                                                                      "subheading": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.5em",
                                                                      },
                                                                      "subtitle1": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.00938em",
                                                                        "lineHeight": 1.75,
                                                                      },
                                                                      "subtitle2": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 500,
                                                                        "letterSpacing": "0.00714em",
                                                                        "lineHeight": 1.57,
                                                                      },
                                                                      "title": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1.3125rem",
                                                                        "fontWeight": 500,
                                                                        "lineHeight": "1.16667em",
                                                                      },
                                                                      "useNextVariants": false,
                                                                    },
                                                                    "zIndex": Object {
                                                                      "appBar": 1100,
                                                                      "drawer": 1200,
                                                                      "mobileStepper": 1000,
                                                                      "modal": 1300,
                                                                      "snackbar": 1400,
                                                                      "tooltip": 1500,
                                                                    },
                                                                  },
                                                                  "name": "MuiIconButton",
                                                                },
                                                                "render": [Function],
                                                                "styledComponentId": "sc-jTzLTM",
                                                                "target": [Function],
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                                Symbol(Symbol.hasInstance): [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            id="share-link"
                                                          >
                                                            <WithStyles(IconButton)
                                                              className="sc-jTzLTM kokRiH"
                                                              id="share-link"
                                                            >
                                                              <IconButton
                                                                className="sc-jTzLTM kokRiH"
                                                                classes={
                                                                  Object {
                                                                    "colorInherit": "MuiIconButton-colorInherit-3",
                                                                    "colorPrimary": "MuiIconButton-colorPrimary-4",
                                                                    "colorSecondary": "MuiIconButton-colorSecondary-5",
                                                                    "disabled": "MuiIconButton-disabled-6",
                                                                    "label": "MuiIconButton-label-7",
                                                                    "root": "MuiIconButton-root-2",
                                                                  }
                                                                }
                                                                color="default"
                                                                disabled={false}
                                                                id="share-link"
                                                              >
                                                                <WithStyles(ButtonBase)
                                                                  centerRipple={true}
                                                                  className="MuiIconButton-root-2 sc-jTzLTM kokRiH"
                                                                  disabled={false}
                                                                  focusRipple={true}
                                                                  id="share-link"
                                                                >
                                                                  <ButtonBase
                                                                    centerRipple={true}
                                                                    className="MuiIconButton-root-2 sc-jTzLTM kokRiH"
                                                                    classes={
                                                                      Object {
                                                                        "disabled": "MuiButtonBase-disabled-9",
                                                                        "focusVisible": "MuiButtonBase-focusVisible-10",
                                                                        "root": "MuiButtonBase-root-8",
                                                                      }
                                                                    }
                                                                    component="button"
                                                                    disableRipple={false}
                                                                    disableTouchRipple={false}
                                                                    disabled={false}
                                                                    focusRipple={true}
                                                                    id="share-link"
                                                                    tabIndex="0"
                                                                    type="button"
                                                                  >
                                                                    <button
                                                                      className="MuiButtonBase-root-8 MuiIconButton-root-2 sc-jTzLTM kokRiH"
                                                                      disabled={false}
                                                                      id="share-link"
                                                                      onBlur={[Function]}
                                                                      onContextMenu={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onKeyUp={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      onMouseUp={[Function]}
                                                                      onTouchEnd={[Function]}
                                                                      onTouchMove={[Function]}
                                                                      onTouchStart={[Function]}
                                                                      tabIndex="0"
                                                                      type="button"
                                                                    >
                                                                      <span
                                                                        className="MuiIconButton-label-7"
                                                                      >
                                                                        <WithStyles(Icon)
                                                                          style={
                                                                            Object {
                                                                              "fontSize": "16px",
                                                                            }
                                                                          }
                                                                        >
                                                                          <Icon
                                                                            classes={
                                                                              Object {
                                                                                "colorAction": "MuiIcon-colorAction-14",
                                                                                "colorDisabled": "MuiIcon-colorDisabled-16",
                                                                                "colorError": "MuiIcon-colorError-15",
                                                                                "colorPrimary": "MuiIcon-colorPrimary-12",
                                                                                "colorSecondary": "MuiIcon-colorSecondary-13",
                                                                                "fontSizeInherit": "MuiIcon-fontSizeInherit-17",
                                                                                "fontSizeLarge": "MuiIcon-fontSizeLarge-19",
                                                                                "fontSizeSmall": "MuiIcon-fontSizeSmall-18",
                                                                                "root": "MuiIcon-root-11",
                                                                              }
                                                                            }
                                                                            color="inherit"
                                                                            component="span"
                                                                            fontSize="default"
                                                                            style={
                                                                              Object {
                                                                                "fontSize": "16px",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              aria-hidden="true"
                                                                              className="material-icons MuiIcon-root-11"
                                                                              style={
                                                                                Object {
                                                                                  "fontSize": "16px",
                                                                                }
                                                                              }
                                                                            >
                                                                              insert_link
                                                                            </span>
                                                                          </Icon>
                                                                        </WithStyles(Icon)>
                                                                      </span>
                                                                      <NoSsr
                                                                        defer={false}
                                                                        fallback={null}
                                                                      >
                                                                        <WithStyles(TouchRipple)
                                                                          center={true}
                                                                          innerRef={[Function]}
                                                                        >
                                                                          <TouchRipple
                                                                            center={true}
                                                                            classes={
                                                                              Object {
                                                                                "child": "MuiTouchRipple-child-112",
                                                                                "childLeaving": "MuiTouchRipple-childLeaving-113",
                                                                                "childPulsate": "MuiTouchRipple-childPulsate-114",
                                                                                "ripple": "MuiTouchRipple-ripple-109",
                                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate-111",
                                                                                "rippleVisible": "MuiTouchRipple-rippleVisible-110",
                                                                                "root": "MuiTouchRipple-root-108",
                                                                              }
                                                                            }
                                                                          >
                                                                            <TransitionGroup
                                                                              childFactory={[Function]}
                                                                              className="MuiTouchRipple-root-108"
                                                                              component="span"
                                                                              enter={true}
                                                                              exit={true}
                                                                            >
                                                                              <span
                                                                                className="MuiTouchRipple-root-108"
                                                                              />
                                                                            </TransitionGroup>
                                                                          </TouchRipple>
                                                                        </WithStyles(TouchRipple)>
                                                                      </NoSsr>
                                                                    </button>
                                                                  </ButtonBase>
                                                                </WithStyles(ButtonBase)>
                                                              </IconButton>
                                                            </WithStyles(IconButton)>
                                                          </StyledComponent>
                                                        </Styled(WithStyles(IconButton))>
                                                      </a>
                                                    </ClipboardButton>
                                                  </div>
                                                </StyledComponent>
                                              </styled.div>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </Notification>
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-gZMcBi",
                              "isStatic": true,
                              "lastClassName": "iVpYKE",
                              "rules": Array [
                                "
  display: flex;
  justify-content: space-around;
  align-items: center;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-gZMcBi",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-gZMcBi iVpYKE"
                        >
                          <Styled(TextField)
                            autoFocus={true}
                            id="message-input"
                            label="Message"
                            margin="normal"
                            name="message-input"
                            onChange={[Function]}
                            onKeyPress={[Function]}
                            value=""
                          >
                            <StyledComponent
                              autoFocus={true}
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-VigVT",
                                    "isStatic": true,
                                    "lastClassName": "gtJKdb",
                                    "rules": Array [
                                      "
  flex: 1;
",
                                    ],
                                  },
                                  "displayName": "Styled(TextField)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-VigVT",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                  Symbol(Symbol.hasInstance): [Function],
                                }
                              }
                              forwardedRef={null}
                              id="message-input"
                              label="Message"
                              margin="normal"
                              name="message-input"
                              onChange={[Function]}
                              onKeyPress={[Function]}
                              value=""
                            >
                              <TextField
                                autoFocus={true}
                                className="sc-VigVT gtJKdb"
                                id="message-input"
                                label="Message"
                                margin="normal"
                                name="message-input"
                                onChange={[Function]}
                                onKeyPress={[Function]}
                                required={false}
                                select={false}
                                value=""
                                variant="standard"
                              >
                                <WithStyles(FormControl)
                                  className="sc-VigVT gtJKdb"
                                  margin="normal"
                                  onKeyPress={[Function]}
                                  required={false}
                                  variant="standard"
                                >
                                  <FormControl
                                    className="sc-VigVT gtJKdb"
                                    classes={
                                      Object {
                                        "fullWidth": "MuiFormControl-fullWidth-59",
                                        "marginDense": "MuiFormControl-marginDense-58",
                                        "marginNormal": "MuiFormControl-marginNormal-57",
                                        "root": "MuiFormControl-root-56",
                                      }
                                    }
                                    component="div"
                                    disabled={false}
                                    error={false}
                                    fullWidth={false}
                                    margin="normal"
                                    onKeyPress={[Function]}
                                    required={false}
                                    variant="standard"
                                  >
                                    <div
                                      className="MuiFormControl-root-56 MuiFormControl-marginNormal-57 sc-VigVT gtJKdb"
                                      onKeyPress={[Function]}
                                    >
                                      <WithStyles(WithFormControlContext(InputLabel))
                                        htmlFor="message-input"
                                      >
                                        <WithFormControlContext(InputLabel)
                                          classes={
                                            Object {
                                              "animated": "MuiInputLabel-animated-68",
                                              "disabled": "MuiInputLabel-disabled-62",
                                              "error": "MuiInputLabel-error-63",
                                              "filled": "MuiInputLabel-filled-69",
                                              "focused": "MuiInputLabel-focused-61",
                                              "formControl": "MuiInputLabel-formControl-65",
                                              "marginDense": "MuiInputLabel-marginDense-66",
                                              "outlined": "MuiInputLabel-outlined-70",
                                              "required": "MuiInputLabel-required-64",
                                              "root": "MuiInputLabel-root-60",
                                              "shrink": "MuiInputLabel-shrink-67",
                                            }
                                          }
                                          htmlFor="message-input"
                                        >
                                          <InputLabel
                                            classes={
                                              Object {
                                                "animated": "MuiInputLabel-animated-68",
                                                "disabled": "MuiInputLabel-disabled-62",
                                                "error": "MuiInputLabel-error-63",
                                                "filled": "MuiInputLabel-filled-69",
                                                "focused": "MuiInputLabel-focused-61",
                                                "formControl": "MuiInputLabel-formControl-65",
                                                "marginDense": "MuiInputLabel-marginDense-66",
                                                "outlined": "MuiInputLabel-outlined-70",
                                                "required": "MuiInputLabel-required-64",
                                                "root": "MuiInputLabel-root-60",
                                                "shrink": "MuiInputLabel-shrink-67",
                                              }
                                            }
                                            disableAnimation={false}
                                            htmlFor="message-input"
                                            muiFormControl={
                                              Object {
                                                "adornedStart": false,
                                                "disabled": false,
                                                "error": false,
                                                "filled": false,
                                                "focused": false,
                                                "margin": "normal",
                                                "onBlur": [Function],
                                                "onEmpty": [Function],
                                                "onFilled": [Function],
                                                "onFocus": [Function],
                                                "required": false,
                                                "variant": "standard",
                                              }
                                            }
                                          >
                                            <WithStyles(WithFormControlContext(FormLabel))
                                              className="MuiInputLabel-root-60 MuiInputLabel-formControl-65 MuiInputLabel-animated-68"
                                              classes={
                                                Object {
                                                  "disabled": "MuiInputLabel-disabled-62",
                                                  "error": "MuiInputLabel-error-63",
                                                  "focused": "MuiInputLabel-focused-61",
                                                  "required": "MuiInputLabel-required-64",
                                                }
                                              }
                                              data-shrink={false}
                                              htmlFor="message-input"
                                            >
                                              <WithFormControlContext(FormLabel)
                                                className="MuiInputLabel-root-60 MuiInputLabel-formControl-65 MuiInputLabel-animated-68"
                                                classes={
                                                  Object {
                                                    "asterisk": "MuiFormLabel-asterisk-77",
                                                    "disabled": "MuiFormLabel-disabled-73 MuiInputLabel-disabled-62",
                                                    "error": "MuiFormLabel-error-74 MuiInputLabel-error-63",
                                                    "filled": "MuiFormLabel-filled-75",
                                                    "focused": "MuiFormLabel-focused-72 MuiInputLabel-focused-61",
                                                    "required": "MuiFormLabel-required-76 MuiInputLabel-required-64",
                                                    "root": "MuiFormLabel-root-71",
                                                  }
                                                }
                                                data-shrink={false}
                                                htmlFor="message-input"
                                              >
                                                <FormLabel
                                                  className="MuiInputLabel-root-60 MuiInputLabel-formControl-65 MuiInputLabel-animated-68"
                                                  classes={
                                                    Object {
                                                      "asterisk": "MuiFormLabel-asterisk-77",
                                                      "disabled": "MuiFormLabel-disabled-73 MuiInputLabel-disabled-62",
                                                      "error": "MuiFormLabel-error-74 MuiInputLabel-error-63",
                                                      "filled": "MuiFormLabel-filled-75",
                                                      "focused": "MuiFormLabel-focused-72 MuiInputLabel-focused-61",
                                                      "required": "MuiFormLabel-required-76 MuiInputLabel-required-64",
                                                      "root": "MuiFormLabel-root-71",
                                                    }
                                                  }
                                                  component="label"
                                                  data-shrink={false}
                                                  htmlFor="message-input"
                                                  muiFormControl={
                                                    Object {
                                                      "adornedStart": false,
                                                      "disabled": false,
                                                      "error": false,
                                                      "filled": false,
                                                      "focused": false,
                                                      "margin": "normal",
                                                      "onBlur": [Function],
                                                      "onEmpty": [Function],
                                                      "onFilled": [Function],
                                                      "onFocus": [Function],
                                                      "required": false,
                                                      "variant": "standard",
                                                    }
                                                  }
                                                >
                                                  <label
                                                    className="MuiFormLabel-root-71 MuiInputLabel-root-60 MuiInputLabel-formControl-65 MuiInputLabel-animated-68"
                                                    data-shrink={false}
                                                    htmlFor="message-input"
                                                  >
                                                    Message
                                                  </label>
                                                </FormLabel>
                                              </WithFormControlContext(FormLabel)>
                                            </WithStyles(WithFormControlContext(FormLabel))>
                                          </InputLabel>
                                        </WithFormControlContext(InputLabel)>
                                      </WithStyles(WithFormControlContext(InputLabel))>
                                      <WithStyles(Input)
                                        autoFocus={true}
                                        id="message-input"
                                        name="message-input"
                                        onChange={[Function]}
                                        value=""
                                      >
                                        <Input
                                          autoFocus={true}
                                          classes={
                                            Object {
                                              "disabled": "MuiInput-disabled-81",
                                              "error": "MuiInput-error-83",
                                              "focused": "MuiInput-focused-80",
                                              "formControl": "MuiInput-formControl-79",
                                              "fullWidth": "MuiInput-fullWidth-85",
                                              "input": "MuiInput-input-86",
                                              "inputMarginDense": "MuiInput-inputMarginDense-87",
                                              "inputMultiline": "MuiInput-inputMultiline-88",
                                              "inputType": "MuiInput-inputType-89",
                                              "inputTypeSearch": "MuiInput-inputTypeSearch-90",
                                              "multiline": "MuiInput-multiline-84",
                                              "root": "MuiInput-root-78",
                                              "underline": "MuiInput-underline-82",
                                            }
                                          }
                                          id="message-input"
                                          name="message-input"
                                          onChange={[Function]}
                                          value=""
                                        >
                                          <WithStyles(WithFormControlContext(InputBase))
                                            autoFocus={true}
                                            classes={
                                              Object {
                                                "disabled": "MuiInput-disabled-81",
                                                "error": "MuiInput-error-83",
                                                "focused": "MuiInput-focused-80",
                                                "formControl": "MuiInput-formControl-79",
                                                "fullWidth": "MuiInput-fullWidth-85",
                                                "input": "MuiInput-input-86",
                                                "inputMarginDense": "MuiInput-inputMarginDense-87",
                                                "inputMultiline": "MuiInput-inputMultiline-88",
                                                "inputType": "MuiInput-inputType-89",
                                                "inputTypeSearch": "MuiInput-inputTypeSearch-90",
                                                "multiline": "MuiInput-multiline-84",
                                                "root": "MuiInput-root-78 MuiInput-underline-82",
                                                "underline": null,
                                              }
                                            }
                                            fullWidth={false}
                                            id="message-input"
                                            inputComponent="input"
                                            multiline={false}
                                            name="message-input"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <WithFormControlContext(InputBase)
                                              autoFocus={true}
                                              classes={
                                                Object {
                                                  "adornedEnd": "MuiInputBase-adornedEnd-96",
                                                  "adornedStart": "MuiInputBase-adornedStart-95",
                                                  "disabled": "MuiInputBase-disabled-94 MuiInput-disabled-81",
                                                  "error": "MuiInputBase-error-97 MuiInput-error-83",
                                                  "focused": "MuiInputBase-focused-93 MuiInput-focused-80",
                                                  "formControl": "MuiInputBase-formControl-92 MuiInput-formControl-79",
                                                  "fullWidth": "MuiInputBase-fullWidth-100 MuiInput-fullWidth-85",
                                                  "input": "MuiInputBase-input-101 MuiInput-input-86",
                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-107",
                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart-106",
                                                  "inputMarginDense": "MuiInputBase-inputMarginDense-102 MuiInput-inputMarginDense-87",
                                                  "inputMultiline": "MuiInputBase-inputMultiline-103 MuiInput-inputMultiline-88",
                                                  "inputType": "MuiInputBase-inputType-104 MuiInput-inputType-89",
                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch-105 MuiInput-inputTypeSearch-90",
                                                  "marginDense": "MuiInputBase-marginDense-98",
                                                  "multiline": "MuiInputBase-multiline-99 MuiInput-multiline-84",
                                                  "root": "MuiInputBase-root-91 MuiInput-root-78 MuiInput-underline-82",
                                                }
                                              }
                                              fullWidth={false}
                                              id="message-input"
                                              inputComponent="input"
                                              multiline={false}
                                              name="message-input"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            >
                                              <InputBase
                                                autoFocus={true}
                                                classes={
                                                  Object {
                                                    "adornedEnd": "MuiInputBase-adornedEnd-96",
                                                    "adornedStart": "MuiInputBase-adornedStart-95",
                                                    "disabled": "MuiInputBase-disabled-94 MuiInput-disabled-81",
                                                    "error": "MuiInputBase-error-97 MuiInput-error-83",
                                                    "focused": "MuiInputBase-focused-93 MuiInput-focused-80",
                                                    "formControl": "MuiInputBase-formControl-92 MuiInput-formControl-79",
                                                    "fullWidth": "MuiInputBase-fullWidth-100 MuiInput-fullWidth-85",
                                                    "input": "MuiInputBase-input-101 MuiInput-input-86",
                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-107",
                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart-106",
                                                    "inputMarginDense": "MuiInputBase-inputMarginDense-102 MuiInput-inputMarginDense-87",
                                                    "inputMultiline": "MuiInputBase-inputMultiline-103 MuiInput-inputMultiline-88",
                                                    "inputType": "MuiInputBase-inputType-104 MuiInput-inputType-89",
                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch-105 MuiInput-inputTypeSearch-90",
                                                    "marginDense": "MuiInputBase-marginDense-98",
                                                    "multiline": "MuiInputBase-multiline-99 MuiInput-multiline-84",
                                                    "root": "MuiInputBase-root-91 MuiInput-root-78 MuiInput-underline-82",
                                                  }
                                                }
                                                fullWidth={false}
                                                id="message-input"
                                                inputComponent="input"
                                                muiFormControl={
                                                  Object {
                                                    "adornedStart": false,
                                                    "disabled": false,
                                                    "error": false,
                                                    "filled": false,
                                                    "focused": false,
                                                    "margin": "normal",
                                                    "onBlur": [Function],
                                                    "onEmpty": [Function],
                                                    "onFilled": [Function],
                                                    "onFocus": [Function],
                                                    "required": false,
                                                    "variant": "standard",
                                                  }
                                                }
                                                multiline={false}
                                                name="message-input"
                                                onChange={[Function]}
                                                type="text"
                                                value=""
                                              >
                                                <div
                                                  className="MuiInputBase-root-91 MuiInput-root-78 MuiInput-underline-82 MuiInputBase-formControl-92 MuiInput-formControl-79"
                                                  onClick={[Function]}
                                                >
                                                  <input
                                                    aria-invalid={false}
                                                    autoFocus={true}
                                                    className="MuiInputBase-input-101 MuiInput-input-86"
                                                    disabled={false}
                                                    id="message-input"
                                                    name="message-input"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    required={false}
                                                    type="text"
                                                    value=""
                                                  />
                                                </div>
                                              </InputBase>
                                            </WithFormControlContext(InputBase)>
                                          </WithStyles(WithFormControlContext(InputBase))>
                                        </Input>
                                      </WithStyles(Input)>
                                    </div>
                                  </FormControl>
                                </WithStyles(FormControl)>
                              </TextField>
                            </StyledComponent>
                          </Styled(TextField)>
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </div>
                </StyledComponent>
              </styled.div>
            </div>
          </StyledComponent>
        </styled.div>
      </Chat>
    </Connect(Chat)>
  </WithStyles(Connect(Chat))>
</Provider>
`;

exports[`Chat should redirect to / 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <WithStyles(Connect(Chat))
    history={
      Object {
        "push": [MockFunction] {
          "calls": Array [
            Array [
              "/",
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
      }
    }
  >
    <Connect(Chat)
      classes={
        Object {
          "progress": "Connect-Chat--progress-1",
        }
      }
      history={
        Object {
          "push": [MockFunction] {
            "calls": Array [
              Array [
                "/",
              ],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": undefined,
              },
            ],
          },
        }
      }
    >
      <Chat
        classes={
          Object {
            "progress": "Connect-Chat--progress-1",
          }
        }
        history={
          Object {
            "push": [MockFunction] {
              "calls": Array [
                Array [
                  "/",
                ],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
              ],
            },
          }
        }
        isInitiator={true}
        messages={Array []}
        notifications={Array []}
        sendClearWritingNotification={[Function]}
        sendMessage={[Function]}
        sendWritingNotification={[Function]}
        user={Object {}}
      >
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-dnqmqq",
                  "isStatic": true,
                  "lastClassName": "ieAKfK",
                  "rules": Array [
                    "
  max-width: 640px;
  width: 100%;
  position: absolute;
  height: calc(100% - 20px);
  top: 0;

  @media (max-width: 800px) {
    max-width: 100%;
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-dnqmqq",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-dnqmqq ieAKfK"
            >
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-iwsKbI",
                        "isStatic": true,
                        "lastClassName": "kzxSCd",
                        "rules": Array [
                          "
  display: flex;
  flex-direction: column;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  padding: 20px 20px 0 20px;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-iwsKbI",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-iwsKbI kzxSCd"
                  >
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-gqjmRU",
                              "isStatic": true,
                              "lastClassName": "cUiTuu",
                              "rules": Array [
                                "
  flex: 1;
  overflow: scroll;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-gqjmRU",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-gqjmRU cUiTuu"
                        >
                          <Notification
                            actionButton={
                              <ClipboardButton
                                component="a"
                                onClick={[Function]}
                              >
                                <ForwardRef
                                  id="share-link"
                                >
                                  <WithStyles(Icon)
                                    style={
                                      Object {
                                        "fontSize": "16px",
                                      }
                                    }
                                  >
                                    insert_link
                                  </WithStyles(Icon)>
                                </ForwardRef>
                              </ClipboardButton>
                            }
                            date={2019-02-04T23:55:17.782Z}
                            text="undefined created chat."
                          >
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-ifAKCX",
                                      "isStatic": true,
                                      "lastClassName": "hkAyvq",
                                      "rules": Array [
                                        "
  display: flex;
  margin-bottom: 5px;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-ifAKCX",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="sc-ifAKCX hkAyvq"
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-EHOje",
                                            "isStatic": true,
                                            "lastClassName": "hsXxjJ",
                                            "rules": Array [
                                              "
  width: 50%;
  display: flex;
  width: 100%;
  margin: 0 10px;
  justify-content: center;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-EHOje",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-EHOje hsXxjJ"
                                      >
                                        <styled.div>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-gzVnrw",
                                                  "isStatic": true,
                                                  "lastClassName": "gDmTXO",
                                                  "rules": Array [
                                                    "
  width: 50%;
  background: ",
                                                    "rgba(255, 255, 255, 0.5)",
                                                    ";
  padding: 20px 10px 5px 10px;
  border-radius: 2px;
  min-width: 220px;
  position: relative;
  display: flex;
  justify-content: space-between;

  > p {
    color: #222;
    font-size: 0.85rem;
    font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;
    font-weight: 400;
    margin: 0;
  }

  :before {
    content: '';
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 12px 0 12px 15px;
    border-color: transparent transparent transparent ",
                                                    "rgba(255, 255, 255, 0.5)",
                                                    ";
    position: absolute;
    top: 0;
    right: -15px;
    bottom: 0;
    margin: auto;
  }

  :after {
    content: '';
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 12px 15px 12px 0;
    border-color: transparent ",
                                                    "rgba(255, 255, 255, 0.5)",
                                                    " transparent transparent;
    position: absolute;
    top: 0;
    left: -15px;
    bottom: 0;
    margin: auto;
  }
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-gzVnrw",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-gzVnrw gDmTXO"
                                            >
                                              <styled.div>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-bZQynM",
                                                        "isStatic": true,
                                                        "lastClassName": "gNQKpL",
                                                        "rules": Array [
                                                          "
  position: absolute;
  top: 5px;
  left: 10px;

  p {
    color: #444;
    font-size: 0.75rem;
    font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;
    font-weight: 400;
    letter-spacing: 0.03333em;
    margin: 0;
  }
",
                                                        ],
                                                      },
                                                      "displayName": "styled.div",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-bZQynM",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <div
                                                    className="sc-bZQynM gNQKpL"
                                                  >
                                                    <p>
                                                      February 5th 2019, 12:24:29 pm
                                                    </p>
                                                  </div>
                                                </StyledComponent>
                                              </styled.div>
                                              <p>
                                                undefined created chat.
                                              </p>
                                              <styled.div>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-htoDjs",
                                                        "isStatic": true,
                                                        "lastClassName": "dCWZkl",
                                                        "rules": Array [
                                                          "
  position: absolute;
  top: 2px;
  right: 0px;
",
                                                        ],
                                                      },
                                                      "displayName": "styled.div",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-htoDjs",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <div
                                                    className="sc-htoDjs dCWZkl"
                                                  >
                                                    <ClipboardButton
                                                      component="a"
                                                      onClick={[Function]}
                                                    >
                                                      <a
                                                        className=""
                                                        onClick={[Function]}
                                                        style={Object {}}
                                                      >
                                                        <Styled(WithStyles(IconButton))
                                                          id="share-link"
                                                        >
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "Naked": [Function],
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-jTzLTM",
                                                                  "isStatic": true,
                                                                  "lastClassName": "kokRiH",
                                                                  "rules": Array [
                                                                    "
  position: absolute;
  top: -1px;
  right: 10px;
",
                                                                  ],
                                                                },
                                                                "displayName": "Styled(WithStyles(IconButton))",
                                                                "foldedComponentIds": Array [],
                                                                "options": Object {
                                                                  "defaultTheme": Object {
                                                                    "breakpoints": Object {
                                                                      "between": [Function],
                                                                      "down": [Function],
                                                                      "keys": Array [
                                                                        "xs",
                                                                        "sm",
                                                                        "md",
                                                                        "lg",
                                                                        "xl",
                                                                      ],
                                                                      "only": [Function],
                                                                      "up": [Function],
                                                                      "values": Object {
                                                                        "lg": 1280,
                                                                        "md": 960,
                                                                        "sm": 600,
                                                                        "xl": 1920,
                                                                        "xs": 0,
                                                                      },
                                                                      "width": [Function],
                                                                    },
                                                                    "direction": "ltr",
                                                                    "mixins": Object {
                                                                      "gutters": [Function],
                                                                      "toolbar": Object {
                                                                        "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                          "minHeight": 48,
                                                                        },
                                                                        "@media (min-width:600px)": Object {
                                                                          "minHeight": 64,
                                                                        },
                                                                        "minHeight": 56,
                                                                      },
                                                                    },
                                                                    "overrides": Object {},
                                                                    "palette": Object {
                                                                      "action": Object {
                                                                        "active": "rgba(0, 0, 0, 0.54)",
                                                                        "disabled": "rgba(0, 0, 0, 0.26)",
                                                                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                        "hover": "rgba(0, 0, 0, 0.08)",
                                                                        "hoverOpacity": 0.08,
                                                                        "selected": "rgba(0, 0, 0, 0.14)",
                                                                      },
                                                                      "augmentColor": [Function],
                                                                      "background": Object {
                                                                        "default": "#fafafa",
                                                                        "paper": "#fff",
                                                                      },
                                                                      "common": Object {
                                                                        "black": "#000",
                                                                        "white": "#fff",
                                                                      },
                                                                      "contrastThreshold": 3,
                                                                      "divider": "rgba(0, 0, 0, 0.12)",
                                                                      "error": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#d32f2f",
                                                                        "light": "#e57373",
                                                                        "main": "#f44336",
                                                                      },
                                                                      "getContrastText": [Function],
                                                                      "grey": Object {
                                                                        "100": "#f5f5f5",
                                                                        "200": "#eeeeee",
                                                                        "300": "#e0e0e0",
                                                                        "400": "#bdbdbd",
                                                                        "50": "#fafafa",
                                                                        "500": "#9e9e9e",
                                                                        "600": "#757575",
                                                                        "700": "#616161",
                                                                        "800": "#424242",
                                                                        "900": "#212121",
                                                                        "A100": "#d5d5d5",
                                                                        "A200": "#aaaaaa",
                                                                        "A400": "#303030",
                                                                        "A700": "#616161",
                                                                      },
                                                                      "primary": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#303f9f",
                                                                        "light": "#7986cb",
                                                                        "main": "#3f51b5",
                                                                      },
                                                                      "secondary": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#c51162",
                                                                        "light": "#ff4081",
                                                                        "main": "#f50057",
                                                                      },
                                                                      "text": Object {
                                                                        "disabled": "rgba(0, 0, 0, 0.38)",
                                                                        "hint": "rgba(0, 0, 0, 0.38)",
                                                                        "primary": "rgba(0, 0, 0, 0.87)",
                                                                        "secondary": "rgba(0, 0, 0, 0.54)",
                                                                      },
                                                                      "tonalOffset": 0.2,
                                                                      "type": "light",
                                                                    },
                                                                    "props": Object {},
                                                                    "shadows": Array [
                                                                      "none",
                                                                      "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                                                      "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                                                      "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                                                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                    ],
                                                                    "shape": Object {
                                                                      "borderRadius": 4,
                                                                    },
                                                                    "spacing": Object {
                                                                      "unit": 8,
                                                                    },
                                                                    "transitions": Object {
                                                                      "create": [Function],
                                                                      "duration": Object {
                                                                        "complex": 375,
                                                                        "enteringScreen": 225,
                                                                        "leavingScreen": 195,
                                                                        "short": 250,
                                                                        "shorter": 200,
                                                                        "shortest": 150,
                                                                        "standard": 300,
                                                                      },
                                                                      "easing": Object {
                                                                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                      },
                                                                      "getAutoHeightDuration": [Function],
                                                                    },
                                                                    "typography": Object {
                                                                      "body1": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.46429em",
                                                                      },
                                                                      "body1Next": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.00938em",
                                                                        "lineHeight": 1.5,
                                                                      },
                                                                      "body2": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 500,
                                                                        "lineHeight": "1.71429em",
                                                                      },
                                                                      "body2Next": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.01071em",
                                                                        "lineHeight": 1.5,
                                                                      },
                                                                      "button": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 500,
                                                                        "textTransform": "uppercase",
                                                                      },
                                                                      "buttonNext": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 500,
                                                                        "letterSpacing": "0.02857em",
                                                                        "lineHeight": 1.75,
                                                                        "textTransform": "uppercase",
                                                                      },
                                                                      "caption": Object {
                                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.75rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.375em",
                                                                      },
                                                                      "captionNext": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.75rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.03333em",
                                                                        "lineHeight": 1.66,
                                                                      },
                                                                      "display1": Object {
                                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "2.125rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.20588em",
                                                                      },
                                                                      "display2": Object {
                                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "2.8125rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.13333em",
                                                                        "marginLeft": "-.02em",
                                                                      },
                                                                      "display3": Object {
                                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "3.5rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "-.02em",
                                                                        "lineHeight": "1.30357em",
                                                                        "marginLeft": "-.02em",
                                                                      },
                                                                      "display4": Object {
                                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "7rem",
                                                                        "fontWeight": 300,
                                                                        "letterSpacing": "-.04em",
                                                                        "lineHeight": "1.14286em",
                                                                        "marginLeft": "-.04em",
                                                                      },
                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                      "fontSize": 14,
                                                                      "fontWeightLight": 300,
                                                                      "fontWeightMedium": 500,
                                                                      "fontWeightRegular": 400,
                                                                      "h1": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "6rem",
                                                                        "fontWeight": 300,
                                                                        "letterSpacing": "-0.01562em",
                                                                        "lineHeight": 1,
                                                                      },
                                                                      "h2": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "3.75rem",
                                                                        "fontWeight": 300,
                                                                        "letterSpacing": "-0.00833em",
                                                                        "lineHeight": 1,
                                                                      },
                                                                      "h3": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "3rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0em",
                                                                        "lineHeight": 1.04,
                                                                      },
                                                                      "h4": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "2.125rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.00735em",
                                                                        "lineHeight": 1.17,
                                                                      },
                                                                      "h5": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1.5rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0em",
                                                                        "lineHeight": 1.33,
                                                                      },
                                                                      "h6": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1.25rem",
                                                                        "fontWeight": 500,
                                                                        "letterSpacing": "0.0075em",
                                                                        "lineHeight": 1.6,
                                                                      },
                                                                      "headline": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1.5rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.35417em",
                                                                      },
                                                                      "overline": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.75rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.08333em",
                                                                        "lineHeight": 2.66,
                                                                        "textTransform": "uppercase",
                                                                      },
                                                                      "pxToRem": [Function],
                                                                      "round": [Function],
                                                                      "subheading": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.5em",
                                                                      },
                                                                      "subtitle1": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.00938em",
                                                                        "lineHeight": 1.75,
                                                                      },
                                                                      "subtitle2": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 500,
                                                                        "letterSpacing": "0.00714em",
                                                                        "lineHeight": 1.57,
                                                                      },
                                                                      "title": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1.3125rem",
                                                                        "fontWeight": 500,
                                                                        "lineHeight": "1.16667em",
                                                                      },
                                                                      "useNextVariants": false,
                                                                    },
                                                                    "zIndex": Object {
                                                                      "appBar": 1100,
                                                                      "drawer": 1200,
                                                                      "mobileStepper": 1000,
                                                                      "modal": 1300,
                                                                      "snackbar": 1400,
                                                                      "tooltip": 1500,
                                                                    },
                                                                  },
                                                                  "name": "MuiIconButton",
                                                                },
                                                                "render": [Function],
                                                                "styledComponentId": "sc-jTzLTM",
                                                                "target": [Function],
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                                Symbol(Symbol.hasInstance): [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            id="share-link"
                                                          >
                                                            <WithStyles(IconButton)
                                                              className="sc-jTzLTM kokRiH"
                                                              id="share-link"
                                                            >
                                                              <IconButton
                                                                className="sc-jTzLTM kokRiH"
                                                                classes={
                                                                  Object {
                                                                    "colorInherit": "MuiIconButton-colorInherit-3",
                                                                    "colorPrimary": "MuiIconButton-colorPrimary-4",
                                                                    "colorSecondary": "MuiIconButton-colorSecondary-5",
                                                                    "disabled": "MuiIconButton-disabled-6",
                                                                    "label": "MuiIconButton-label-7",
                                                                    "root": "MuiIconButton-root-2",
                                                                  }
                                                                }
                                                                color="default"
                                                                disabled={false}
                                                                id="share-link"
                                                              >
                                                                <WithStyles(ButtonBase)
                                                                  centerRipple={true}
                                                                  className="MuiIconButton-root-2 sc-jTzLTM kokRiH"
                                                                  disabled={false}
                                                                  focusRipple={true}
                                                                  id="share-link"
                                                                >
                                                                  <ButtonBase
                                                                    centerRipple={true}
                                                                    className="MuiIconButton-root-2 sc-jTzLTM kokRiH"
                                                                    classes={
                                                                      Object {
                                                                        "disabled": "MuiButtonBase-disabled-9",
                                                                        "focusVisible": "MuiButtonBase-focusVisible-10",
                                                                        "root": "MuiButtonBase-root-8",
                                                                      }
                                                                    }
                                                                    component="button"
                                                                    disableRipple={false}
                                                                    disableTouchRipple={false}
                                                                    disabled={false}
                                                                    focusRipple={true}
                                                                    id="share-link"
                                                                    tabIndex="0"
                                                                    type="button"
                                                                  >
                                                                    <button
                                                                      className="MuiButtonBase-root-8 MuiIconButton-root-2 sc-jTzLTM kokRiH"
                                                                      disabled={false}
                                                                      id="share-link"
                                                                      onBlur={[Function]}
                                                                      onContextMenu={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onKeyUp={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      onMouseUp={[Function]}
                                                                      onTouchEnd={[Function]}
                                                                      onTouchMove={[Function]}
                                                                      onTouchStart={[Function]}
                                                                      tabIndex="0"
                                                                      type="button"
                                                                    >
                                                                      <span
                                                                        className="MuiIconButton-label-7"
                                                                      >
                                                                        <WithStyles(Icon)
                                                                          style={
                                                                            Object {
                                                                              "fontSize": "16px",
                                                                            }
                                                                          }
                                                                        >
                                                                          <Icon
                                                                            classes={
                                                                              Object {
                                                                                "colorAction": "MuiIcon-colorAction-14",
                                                                                "colorDisabled": "MuiIcon-colorDisabled-16",
                                                                                "colorError": "MuiIcon-colorError-15",
                                                                                "colorPrimary": "MuiIcon-colorPrimary-12",
                                                                                "colorSecondary": "MuiIcon-colorSecondary-13",
                                                                                "fontSizeInherit": "MuiIcon-fontSizeInherit-17",
                                                                                "fontSizeLarge": "MuiIcon-fontSizeLarge-19",
                                                                                "fontSizeSmall": "MuiIcon-fontSizeSmall-18",
                                                                                "root": "MuiIcon-root-11",
                                                                              }
                                                                            }
                                                                            color="inherit"
                                                                            component="span"
                                                                            fontSize="default"
                                                                            style={
                                                                              Object {
                                                                                "fontSize": "16px",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              aria-hidden="true"
                                                                              className="material-icons MuiIcon-root-11"
                                                                              style={
                                                                                Object {
                                                                                  "fontSize": "16px",
                                                                                }
                                                                              }
                                                                            >
                                                                              insert_link
                                                                            </span>
                                                                          </Icon>
                                                                        </WithStyles(Icon)>
                                                                      </span>
                                                                      <NoSsr
                                                                        defer={false}
                                                                        fallback={null}
                                                                      >
                                                                        <WithStyles(TouchRipple)
                                                                          center={true}
                                                                          innerRef={[Function]}
                                                                        >
                                                                          <TouchRipple
                                                                            center={true}
                                                                            classes={
                                                                              Object {
                                                                                "child": "MuiTouchRipple-child-112",
                                                                                "childLeaving": "MuiTouchRipple-childLeaving-113",
                                                                                "childPulsate": "MuiTouchRipple-childPulsate-114",
                                                                                "ripple": "MuiTouchRipple-ripple-109",
                                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate-111",
                                                                                "rippleVisible": "MuiTouchRipple-rippleVisible-110",
                                                                                "root": "MuiTouchRipple-root-108",
                                                                              }
                                                                            }
                                                                          >
                                                                            <TransitionGroup
                                                                              childFactory={[Function]}
                                                                              className="MuiTouchRipple-root-108"
                                                                              component="span"
                                                                              enter={true}
                                                                              exit={true}
                                                                            >
                                                                              <span
                                                                                className="MuiTouchRipple-root-108"
                                                                              />
                                                                            </TransitionGroup>
                                                                          </TouchRipple>
                                                                        </WithStyles(TouchRipple)>
                                                                      </NoSsr>
                                                                    </button>
                                                                  </ButtonBase>
                                                                </WithStyles(ButtonBase)>
                                                              </IconButton>
                                                            </WithStyles(IconButton)>
                                                          </StyledComponent>
                                                        </Styled(WithStyles(IconButton))>
                                                      </a>
                                                    </ClipboardButton>
                                                  </div>
                                                </StyledComponent>
                                              </styled.div>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </Notification>
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-gZMcBi",
                              "isStatic": true,
                              "lastClassName": "iVpYKE",
                              "rules": Array [
                                "
  display: flex;
  justify-content: space-around;
  align-items: center;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-gZMcBi",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-gZMcBi iVpYKE"
                        >
                          <Styled(TextField)
                            autoFocus={true}
                            id="message-input"
                            label="Message"
                            margin="normal"
                            name="message-input"
                            onChange={[Function]}
                            onKeyPress={[Function]}
                            value=""
                          >
                            <StyledComponent
                              autoFocus={true}
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-VigVT",
                                    "isStatic": true,
                                    "lastClassName": "gtJKdb",
                                    "rules": Array [
                                      "
  flex: 1;
",
                                    ],
                                  },
                                  "displayName": "Styled(TextField)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-VigVT",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                  Symbol(Symbol.hasInstance): [Function],
                                }
                              }
                              forwardedRef={null}
                              id="message-input"
                              label="Message"
                              margin="normal"
                              name="message-input"
                              onChange={[Function]}
                              onKeyPress={[Function]}
                              value=""
                            >
                              <TextField
                                autoFocus={true}
                                className="sc-VigVT gtJKdb"
                                id="message-input"
                                label="Message"
                                margin="normal"
                                name="message-input"
                                onChange={[Function]}
                                onKeyPress={[Function]}
                                required={false}
                                select={false}
                                value=""
                                variant="standard"
                              >
                                <WithStyles(FormControl)
                                  className="sc-VigVT gtJKdb"
                                  margin="normal"
                                  onKeyPress={[Function]}
                                  required={false}
                                  variant="standard"
                                >
                                  <FormControl
                                    className="sc-VigVT gtJKdb"
                                    classes={
                                      Object {
                                        "fullWidth": "MuiFormControl-fullWidth-59",
                                        "marginDense": "MuiFormControl-marginDense-58",
                                        "marginNormal": "MuiFormControl-marginNormal-57",
                                        "root": "MuiFormControl-root-56",
                                      }
                                    }
                                    component="div"
                                    disabled={false}
                                    error={false}
                                    fullWidth={false}
                                    margin="normal"
                                    onKeyPress={[Function]}
                                    required={false}
                                    variant="standard"
                                  >
                                    <div
                                      className="MuiFormControl-root-56 MuiFormControl-marginNormal-57 sc-VigVT gtJKdb"
                                      onKeyPress={[Function]}
                                    >
                                      <WithStyles(WithFormControlContext(InputLabel))
                                        htmlFor="message-input"
                                      >
                                        <WithFormControlContext(InputLabel)
                                          classes={
                                            Object {
                                              "animated": "MuiInputLabel-animated-68",
                                              "disabled": "MuiInputLabel-disabled-62",
                                              "error": "MuiInputLabel-error-63",
                                              "filled": "MuiInputLabel-filled-69",
                                              "focused": "MuiInputLabel-focused-61",
                                              "formControl": "MuiInputLabel-formControl-65",
                                              "marginDense": "MuiInputLabel-marginDense-66",
                                              "outlined": "MuiInputLabel-outlined-70",
                                              "required": "MuiInputLabel-required-64",
                                              "root": "MuiInputLabel-root-60",
                                              "shrink": "MuiInputLabel-shrink-67",
                                            }
                                          }
                                          htmlFor="message-input"
                                        >
                                          <InputLabel
                                            classes={
                                              Object {
                                                "animated": "MuiInputLabel-animated-68",
                                                "disabled": "MuiInputLabel-disabled-62",
                                                "error": "MuiInputLabel-error-63",
                                                "filled": "MuiInputLabel-filled-69",
                                                "focused": "MuiInputLabel-focused-61",
                                                "formControl": "MuiInputLabel-formControl-65",
                                                "marginDense": "MuiInputLabel-marginDense-66",
                                                "outlined": "MuiInputLabel-outlined-70",
                                                "required": "MuiInputLabel-required-64",
                                                "root": "MuiInputLabel-root-60",
                                                "shrink": "MuiInputLabel-shrink-67",
                                              }
                                            }
                                            disableAnimation={false}
                                            htmlFor="message-input"
                                            muiFormControl={
                                              Object {
                                                "adornedStart": false,
                                                "disabled": false,
                                                "error": false,
                                                "filled": false,
                                                "focused": false,
                                                "margin": "normal",
                                                "onBlur": [Function],
                                                "onEmpty": [Function],
                                                "onFilled": [Function],
                                                "onFocus": [Function],
                                                "required": false,
                                                "variant": "standard",
                                              }
                                            }
                                          >
                                            <WithStyles(WithFormControlContext(FormLabel))
                                              className="MuiInputLabel-root-60 MuiInputLabel-formControl-65 MuiInputLabel-animated-68"
                                              classes={
                                                Object {
                                                  "disabled": "MuiInputLabel-disabled-62",
                                                  "error": "MuiInputLabel-error-63",
                                                  "focused": "MuiInputLabel-focused-61",
                                                  "required": "MuiInputLabel-required-64",
                                                }
                                              }
                                              data-shrink={false}
                                              htmlFor="message-input"
                                            >
                                              <WithFormControlContext(FormLabel)
                                                className="MuiInputLabel-root-60 MuiInputLabel-formControl-65 MuiInputLabel-animated-68"
                                                classes={
                                                  Object {
                                                    "asterisk": "MuiFormLabel-asterisk-77",
                                                    "disabled": "MuiFormLabel-disabled-73 MuiInputLabel-disabled-62",
                                                    "error": "MuiFormLabel-error-74 MuiInputLabel-error-63",
                                                    "filled": "MuiFormLabel-filled-75",
                                                    "focused": "MuiFormLabel-focused-72 MuiInputLabel-focused-61",
                                                    "required": "MuiFormLabel-required-76 MuiInputLabel-required-64",
                                                    "root": "MuiFormLabel-root-71",
                                                  }
                                                }
                                                data-shrink={false}
                                                htmlFor="message-input"
                                              >
                                                <FormLabel
                                                  className="MuiInputLabel-root-60 MuiInputLabel-formControl-65 MuiInputLabel-animated-68"
                                                  classes={
                                                    Object {
                                                      "asterisk": "MuiFormLabel-asterisk-77",
                                                      "disabled": "MuiFormLabel-disabled-73 MuiInputLabel-disabled-62",
                                                      "error": "MuiFormLabel-error-74 MuiInputLabel-error-63",
                                                      "filled": "MuiFormLabel-filled-75",
                                                      "focused": "MuiFormLabel-focused-72 MuiInputLabel-focused-61",
                                                      "required": "MuiFormLabel-required-76 MuiInputLabel-required-64",
                                                      "root": "MuiFormLabel-root-71",
                                                    }
                                                  }
                                                  component="label"
                                                  data-shrink={false}
                                                  htmlFor="message-input"
                                                  muiFormControl={
                                                    Object {
                                                      "adornedStart": false,
                                                      "disabled": false,
                                                      "error": false,
                                                      "filled": false,
                                                      "focused": false,
                                                      "margin": "normal",
                                                      "onBlur": [Function],
                                                      "onEmpty": [Function],
                                                      "onFilled": [Function],
                                                      "onFocus": [Function],
                                                      "required": false,
                                                      "variant": "standard",
                                                    }
                                                  }
                                                >
                                                  <label
                                                    className="MuiFormLabel-root-71 MuiInputLabel-root-60 MuiInputLabel-formControl-65 MuiInputLabel-animated-68"
                                                    data-shrink={false}
                                                    htmlFor="message-input"
                                                  >
                                                    Message
                                                  </label>
                                                </FormLabel>
                                              </WithFormControlContext(FormLabel)>
                                            </WithStyles(WithFormControlContext(FormLabel))>
                                          </InputLabel>
                                        </WithFormControlContext(InputLabel)>
                                      </WithStyles(WithFormControlContext(InputLabel))>
                                      <WithStyles(Input)
                                        autoFocus={true}
                                        id="message-input"
                                        name="message-input"
                                        onChange={[Function]}
                                        value=""
                                      >
                                        <Input
                                          autoFocus={true}
                                          classes={
                                            Object {
                                              "disabled": "MuiInput-disabled-81",
                                              "error": "MuiInput-error-83",
                                              "focused": "MuiInput-focused-80",
                                              "formControl": "MuiInput-formControl-79",
                                              "fullWidth": "MuiInput-fullWidth-85",
                                              "input": "MuiInput-input-86",
                                              "inputMarginDense": "MuiInput-inputMarginDense-87",
                                              "inputMultiline": "MuiInput-inputMultiline-88",
                                              "inputType": "MuiInput-inputType-89",
                                              "inputTypeSearch": "MuiInput-inputTypeSearch-90",
                                              "multiline": "MuiInput-multiline-84",
                                              "root": "MuiInput-root-78",
                                              "underline": "MuiInput-underline-82",
                                            }
                                          }
                                          id="message-input"
                                          name="message-input"
                                          onChange={[Function]}
                                          value=""
                                        >
                                          <WithStyles(WithFormControlContext(InputBase))
                                            autoFocus={true}
                                            classes={
                                              Object {
                                                "disabled": "MuiInput-disabled-81",
                                                "error": "MuiInput-error-83",
                                                "focused": "MuiInput-focused-80",
                                                "formControl": "MuiInput-formControl-79",
                                                "fullWidth": "MuiInput-fullWidth-85",
                                                "input": "MuiInput-input-86",
                                                "inputMarginDense": "MuiInput-inputMarginDense-87",
                                                "inputMultiline": "MuiInput-inputMultiline-88",
                                                "inputType": "MuiInput-inputType-89",
                                                "inputTypeSearch": "MuiInput-inputTypeSearch-90",
                                                "multiline": "MuiInput-multiline-84",
                                                "root": "MuiInput-root-78 MuiInput-underline-82",
                                                "underline": null,
                                              }
                                            }
                                            fullWidth={false}
                                            id="message-input"
                                            inputComponent="input"
                                            multiline={false}
                                            name="message-input"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <WithFormControlContext(InputBase)
                                              autoFocus={true}
                                              classes={
                                                Object {
                                                  "adornedEnd": "MuiInputBase-adornedEnd-96",
                                                  "adornedStart": "MuiInputBase-adornedStart-95",
                                                  "disabled": "MuiInputBase-disabled-94 MuiInput-disabled-81",
                                                  "error": "MuiInputBase-error-97 MuiInput-error-83",
                                                  "focused": "MuiInputBase-focused-93 MuiInput-focused-80",
                                                  "formControl": "MuiInputBase-formControl-92 MuiInput-formControl-79",
                                                  "fullWidth": "MuiInputBase-fullWidth-100 MuiInput-fullWidth-85",
                                                  "input": "MuiInputBase-input-101 MuiInput-input-86",
                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-107",
                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart-106",
                                                  "inputMarginDense": "MuiInputBase-inputMarginDense-102 MuiInput-inputMarginDense-87",
                                                  "inputMultiline": "MuiInputBase-inputMultiline-103 MuiInput-inputMultiline-88",
                                                  "inputType": "MuiInputBase-inputType-104 MuiInput-inputType-89",
                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch-105 MuiInput-inputTypeSearch-90",
                                                  "marginDense": "MuiInputBase-marginDense-98",
                                                  "multiline": "MuiInputBase-multiline-99 MuiInput-multiline-84",
                                                  "root": "MuiInputBase-root-91 MuiInput-root-78 MuiInput-underline-82",
                                                }
                                              }
                                              fullWidth={false}
                                              id="message-input"
                                              inputComponent="input"
                                              multiline={false}
                                              name="message-input"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            >
                                              <InputBase
                                                autoFocus={true}
                                                classes={
                                                  Object {
                                                    "adornedEnd": "MuiInputBase-adornedEnd-96",
                                                    "adornedStart": "MuiInputBase-adornedStart-95",
                                                    "disabled": "MuiInputBase-disabled-94 MuiInput-disabled-81",
                                                    "error": "MuiInputBase-error-97 MuiInput-error-83",
                                                    "focused": "MuiInputBase-focused-93 MuiInput-focused-80",
                                                    "formControl": "MuiInputBase-formControl-92 MuiInput-formControl-79",
                                                    "fullWidth": "MuiInputBase-fullWidth-100 MuiInput-fullWidth-85",
                                                    "input": "MuiInputBase-input-101 MuiInput-input-86",
                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-107",
                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart-106",
                                                    "inputMarginDense": "MuiInputBase-inputMarginDense-102 MuiInput-inputMarginDense-87",
                                                    "inputMultiline": "MuiInputBase-inputMultiline-103 MuiInput-inputMultiline-88",
                                                    "inputType": "MuiInputBase-inputType-104 MuiInput-inputType-89",
                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch-105 MuiInput-inputTypeSearch-90",
                                                    "marginDense": "MuiInputBase-marginDense-98",
                                                    "multiline": "MuiInputBase-multiline-99 MuiInput-multiline-84",
                                                    "root": "MuiInputBase-root-91 MuiInput-root-78 MuiInput-underline-82",
                                                  }
                                                }
                                                fullWidth={false}
                                                id="message-input"
                                                inputComponent="input"
                                                muiFormControl={
                                                  Object {
                                                    "adornedStart": false,
                                                    "disabled": false,
                                                    "error": false,
                                                    "filled": false,
                                                    "focused": false,
                                                    "margin": "normal",
                                                    "onBlur": [Function],
                                                    "onEmpty": [Function],
                                                    "onFilled": [Function],
                                                    "onFocus": [Function],
                                                    "required": false,
                                                    "variant": "standard",
                                                  }
                                                }
                                                multiline={false}
                                                name="message-input"
                                                onChange={[Function]}
                                                type="text"
                                                value=""
                                              >
                                                <div
                                                  className="MuiInputBase-root-91 MuiInput-root-78 MuiInput-underline-82 MuiInputBase-formControl-92 MuiInput-formControl-79"
                                                  onClick={[Function]}
                                                >
                                                  <input
                                                    aria-invalid={false}
                                                    autoFocus={true}
                                                    className="MuiInputBase-input-101 MuiInput-input-86"
                                                    disabled={false}
                                                    id="message-input"
                                                    name="message-input"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    required={false}
                                                    type="text"
                                                    value=""
                                                  />
                                                </div>
                                              </InputBase>
                                            </WithFormControlContext(InputBase)>
                                          </WithStyles(WithFormControlContext(InputBase))>
                                        </Input>
                                      </WithStyles(Input)>
                                    </div>
                                  </FormControl>
                                </WithStyles(FormControl)>
                              </TextField>
                            </StyledComponent>
                          </Styled(TextField)>
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </div>
                </StyledComponent>
              </styled.div>
            </div>
          </StyledComponent>
        </styled.div>
      </Chat>
    </Connect(Chat)>
  </WithStyles(Connect(Chat))>
</Provider>
`;

exports[`Chat should render connected component with messages 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <WithStyles(Connect(Chat))>
    <Connect(Chat)
      classes={
        Object {
          "progress": "Connect-Chat--progress-1",
        }
      }
    >
      <Chat
        classes={
          Object {
            "progress": "Connect-Chat--progress-1",
          }
        }
        isInitiator={true}
        messages={
          Array [
            Object {
              "date": 2019-02-04T23:55:17.782Z,
              "text": "How are you doing?",
              "type": "own",
              "user": Object {
                "avatar": "metal",
                "id": 42,
                "name": "Dude",
              },
            },
            Object {
              "date": 2019-02-04T23:55:17.782Z,
              "text": "Confortably numb.",
              "type": "peer",
              "user": Object {
                "avatar": "rock",
                "id": 86,
                "name": "David Gilmour",
              },
            },
          ]
        }
        notifications={Array []}
        sendClearWritingNotification={[Function]}
        sendMessage={[Function]}
        sendWritingNotification={[Function]}
        user={
          Object {
            "avatar": "metal",
            "id": 42,
            "name": "Dude",
          }
        }
      >
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-dnqmqq",
                  "isStatic": true,
                  "lastClassName": "ieAKfK",
                  "rules": Array [
                    "
  max-width: 640px;
  width: 100%;
  position: absolute;
  height: calc(100% - 20px);
  top: 0;

  @media (max-width: 800px) {
    max-width: 100%;
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-dnqmqq",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-dnqmqq ieAKfK"
            >
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-iwsKbI",
                        "isStatic": true,
                        "lastClassName": "kzxSCd",
                        "rules": Array [
                          "
  display: flex;
  flex-direction: column;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  padding: 20px 20px 0 20px;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-iwsKbI",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-iwsKbI kzxSCd"
                  >
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-gqjmRU",
                              "isStatic": true,
                              "lastClassName": "cUiTuu",
                              "rules": Array [
                                "
  flex: 1;
  overflow: scroll;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-gqjmRU",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-gqjmRU cUiTuu"
                        >
                          <Notification
                            actionButton={
                              <ClipboardButton
                                component="a"
                                onClick={[Function]}
                              >
                                <ForwardRef
                                  id="share-link"
                                >
                                  <WithStyles(Icon)
                                    style={
                                      Object {
                                        "fontSize": "16px",
                                      }
                                    }
                                  >
                                    insert_link
                                  </WithStyles(Icon)>
                                </ForwardRef>
                              </ClipboardButton>
                            }
                            date={2019-02-04T23:55:17.782Z}
                            text="Dude created chat."
                          >
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-ifAKCX",
                                      "isStatic": true,
                                      "lastClassName": "hkAyvq",
                                      "rules": Array [
                                        "
  display: flex;
  margin-bottom: 5px;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-ifAKCX",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="sc-ifAKCX hkAyvq"
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-EHOje",
                                            "isStatic": true,
                                            "lastClassName": "hsXxjJ",
                                            "rules": Array [
                                              "
  width: 50%;
  display: flex;
  width: 100%;
  margin: 0 10px;
  justify-content: center;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-EHOje",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-EHOje hsXxjJ"
                                      >
                                        <styled.div>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-gzVnrw",
                                                  "isStatic": true,
                                                  "lastClassName": "gDmTXO",
                                                  "rules": Array [
                                                    "
  width: 50%;
  background: ",
                                                    "rgba(255, 255, 255, 0.5)",
                                                    ";
  padding: 20px 10px 5px 10px;
  border-radius: 2px;
  min-width: 220px;
  position: relative;
  display: flex;
  justify-content: space-between;

  > p {
    color: #222;
    font-size: 0.85rem;
    font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;
    font-weight: 400;
    margin: 0;
  }

  :before {
    content: '';
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 12px 0 12px 15px;
    border-color: transparent transparent transparent ",
                                                    "rgba(255, 255, 255, 0.5)",
                                                    ";
    position: absolute;
    top: 0;
    right: -15px;
    bottom: 0;
    margin: auto;
  }

  :after {
    content: '';
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 12px 15px 12px 0;
    border-color: transparent ",
                                                    "rgba(255, 255, 255, 0.5)",
                                                    " transparent transparent;
    position: absolute;
    top: 0;
    left: -15px;
    bottom: 0;
    margin: auto;
  }
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-gzVnrw",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-gzVnrw gDmTXO"
                                            >
                                              <styled.div>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-bZQynM",
                                                        "isStatic": true,
                                                        "lastClassName": "gNQKpL",
                                                        "rules": Array [
                                                          "
  position: absolute;
  top: 5px;
  left: 10px;

  p {
    color: #444;
    font-size: 0.75rem;
    font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;
    font-weight: 400;
    letter-spacing: 0.03333em;
    margin: 0;
  }
",
                                                        ],
                                                      },
                                                      "displayName": "styled.div",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-bZQynM",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <div
                                                    className="sc-bZQynM gNQKpL"
                                                  >
                                                    <p>
                                                      February 5th 2019, 12:24:29 pm
                                                    </p>
                                                  </div>
                                                </StyledComponent>
                                              </styled.div>
                                              <p>
                                                Dude created chat.
                                              </p>
                                              <styled.div>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-htoDjs",
                                                        "isStatic": true,
                                                        "lastClassName": "dCWZkl",
                                                        "rules": Array [
                                                          "
  position: absolute;
  top: 2px;
  right: 0px;
",
                                                        ],
                                                      },
                                                      "displayName": "styled.div",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-htoDjs",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <div
                                                    className="sc-htoDjs dCWZkl"
                                                  >
                                                    <ClipboardButton
                                                      component="a"
                                                      onClick={[Function]}
                                                    >
                                                      <a
                                                        className=""
                                                        onClick={[Function]}
                                                        style={Object {}}
                                                      >
                                                        <Styled(WithStyles(IconButton))
                                                          id="share-link"
                                                        >
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "Naked": [Function],
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-jTzLTM",
                                                                  "isStatic": true,
                                                                  "lastClassName": "kokRiH",
                                                                  "rules": Array [
                                                                    "
  position: absolute;
  top: -1px;
  right: 10px;
",
                                                                  ],
                                                                },
                                                                "displayName": "Styled(WithStyles(IconButton))",
                                                                "foldedComponentIds": Array [],
                                                                "options": Object {
                                                                  "defaultTheme": Object {
                                                                    "breakpoints": Object {
                                                                      "between": [Function],
                                                                      "down": [Function],
                                                                      "keys": Array [
                                                                        "xs",
                                                                        "sm",
                                                                        "md",
                                                                        "lg",
                                                                        "xl",
                                                                      ],
                                                                      "only": [Function],
                                                                      "up": [Function],
                                                                      "values": Object {
                                                                        "lg": 1280,
                                                                        "md": 960,
                                                                        "sm": 600,
                                                                        "xl": 1920,
                                                                        "xs": 0,
                                                                      },
                                                                      "width": [Function],
                                                                    },
                                                                    "direction": "ltr",
                                                                    "mixins": Object {
                                                                      "gutters": [Function],
                                                                      "toolbar": Object {
                                                                        "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                          "minHeight": 48,
                                                                        },
                                                                        "@media (min-width:600px)": Object {
                                                                          "minHeight": 64,
                                                                        },
                                                                        "minHeight": 56,
                                                                      },
                                                                    },
                                                                    "overrides": Object {},
                                                                    "palette": Object {
                                                                      "action": Object {
                                                                        "active": "rgba(0, 0, 0, 0.54)",
                                                                        "disabled": "rgba(0, 0, 0, 0.26)",
                                                                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                        "hover": "rgba(0, 0, 0, 0.08)",
                                                                        "hoverOpacity": 0.08,
                                                                        "selected": "rgba(0, 0, 0, 0.14)",
                                                                      },
                                                                      "augmentColor": [Function],
                                                                      "background": Object {
                                                                        "default": "#fafafa",
                                                                        "paper": "#fff",
                                                                      },
                                                                      "common": Object {
                                                                        "black": "#000",
                                                                        "white": "#fff",
                                                                      },
                                                                      "contrastThreshold": 3,
                                                                      "divider": "rgba(0, 0, 0, 0.12)",
                                                                      "error": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#d32f2f",
                                                                        "light": "#e57373",
                                                                        "main": "#f44336",
                                                                      },
                                                                      "getContrastText": [Function],
                                                                      "grey": Object {
                                                                        "100": "#f5f5f5",
                                                                        "200": "#eeeeee",
                                                                        "300": "#e0e0e0",
                                                                        "400": "#bdbdbd",
                                                                        "50": "#fafafa",
                                                                        "500": "#9e9e9e",
                                                                        "600": "#757575",
                                                                        "700": "#616161",
                                                                        "800": "#424242",
                                                                        "900": "#212121",
                                                                        "A100": "#d5d5d5",
                                                                        "A200": "#aaaaaa",
                                                                        "A400": "#303030",
                                                                        "A700": "#616161",
                                                                      },
                                                                      "primary": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#303f9f",
                                                                        "light": "#7986cb",
                                                                        "main": "#3f51b5",
                                                                      },
                                                                      "secondary": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#c51162",
                                                                        "light": "#ff4081",
                                                                        "main": "#f50057",
                                                                      },
                                                                      "text": Object {
                                                                        "disabled": "rgba(0, 0, 0, 0.38)",
                                                                        "hint": "rgba(0, 0, 0, 0.38)",
                                                                        "primary": "rgba(0, 0, 0, 0.87)",
                                                                        "secondary": "rgba(0, 0, 0, 0.54)",
                                                                      },
                                                                      "tonalOffset": 0.2,
                                                                      "type": "light",
                                                                    },
                                                                    "props": Object {},
                                                                    "shadows": Array [
                                                                      "none",
                                                                      "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                                                      "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                                                      "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                                                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                    ],
                                                                    "shape": Object {
                                                                      "borderRadius": 4,
                                                                    },
                                                                    "spacing": Object {
                                                                      "unit": 8,
                                                                    },
                                                                    "transitions": Object {
                                                                      "create": [Function],
                                                                      "duration": Object {
                                                                        "complex": 375,
                                                                        "enteringScreen": 225,
                                                                        "leavingScreen": 195,
                                                                        "short": 250,
                                                                        "shorter": 200,
                                                                        "shortest": 150,
                                                                        "standard": 300,
                                                                      },
                                                                      "easing": Object {
                                                                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                      },
                                                                      "getAutoHeightDuration": [Function],
                                                                    },
                                                                    "typography": Object {
                                                                      "body1": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.46429em",
                                                                      },
                                                                      "body1Next": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.00938em",
                                                                        "lineHeight": 1.5,
                                                                      },
                                                                      "body2": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 500,
                                                                        "lineHeight": "1.71429em",
                                                                      },
                                                                      "body2Next": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.01071em",
                                                                        "lineHeight": 1.5,
                                                                      },
                                                                      "button": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 500,
                                                                        "textTransform": "uppercase",
                                                                      },
                                                                      "buttonNext": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 500,
                                                                        "letterSpacing": "0.02857em",
                                                                        "lineHeight": 1.75,
                                                                        "textTransform": "uppercase",
                                                                      },
                                                                      "caption": Object {
                                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.75rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.375em",
                                                                      },
                                                                      "captionNext": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.75rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.03333em",
                                                                        "lineHeight": 1.66,
                                                                      },
                                                                      "display1": Object {
                                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "2.125rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.20588em",
                                                                      },
                                                                      "display2": Object {
                                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "2.8125rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.13333em",
                                                                        "marginLeft": "-.02em",
                                                                      },
                                                                      "display3": Object {
                                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "3.5rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "-.02em",
                                                                        "lineHeight": "1.30357em",
                                                                        "marginLeft": "-.02em",
                                                                      },
                                                                      "display4": Object {
                                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "7rem",
                                                                        "fontWeight": 300,
                                                                        "letterSpacing": "-.04em",
                                                                        "lineHeight": "1.14286em",
                                                                        "marginLeft": "-.04em",
                                                                      },
                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                      "fontSize": 14,
                                                                      "fontWeightLight": 300,
                                                                      "fontWeightMedium": 500,
                                                                      "fontWeightRegular": 400,
                                                                      "h1": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "6rem",
                                                                        "fontWeight": 300,
                                                                        "letterSpacing": "-0.01562em",
                                                                        "lineHeight": 1,
                                                                      },
                                                                      "h2": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "3.75rem",
                                                                        "fontWeight": 300,
                                                                        "letterSpacing": "-0.00833em",
                                                                        "lineHeight": 1,
                                                                      },
                                                                      "h3": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "3rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0em",
                                                                        "lineHeight": 1.04,
                                                                      },
                                                                      "h4": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "2.125rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.00735em",
                                                                        "lineHeight": 1.17,
                                                                      },
                                                                      "h5": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1.5rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0em",
                                                                        "lineHeight": 1.33,
                                                                      },
                                                                      "h6": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1.25rem",
                                                                        "fontWeight": 500,
                                                                        "letterSpacing": "0.0075em",
                                                                        "lineHeight": 1.6,
                                                                      },
                                                                      "headline": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1.5rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.35417em",
                                                                      },
                                                                      "overline": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.75rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.08333em",
                                                                        "lineHeight": 2.66,
                                                                        "textTransform": "uppercase",
                                                                      },
                                                                      "pxToRem": [Function],
                                                                      "round": [Function],
                                                                      "subheading": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.5em",
                                                                      },
                                                                      "subtitle1": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.00938em",
                                                                        "lineHeight": 1.75,
                                                                      },
                                                                      "subtitle2": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 500,
                                                                        "letterSpacing": "0.00714em",
                                                                        "lineHeight": 1.57,
                                                                      },
                                                                      "title": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1.3125rem",
                                                                        "fontWeight": 500,
                                                                        "lineHeight": "1.16667em",
                                                                      },
                                                                      "useNextVariants": false,
                                                                    },
                                                                    "zIndex": Object {
                                                                      "appBar": 1100,
                                                                      "drawer": 1200,
                                                                      "mobileStepper": 1000,
                                                                      "modal": 1300,
                                                                      "snackbar": 1400,
                                                                      "tooltip": 1500,
                                                                    },
                                                                  },
                                                                  "name": "MuiIconButton",
                                                                },
                                                                "render": [Function],
                                                                "styledComponentId": "sc-jTzLTM",
                                                                "target": [Function],
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                                Symbol(Symbol.hasInstance): [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            id="share-link"
                                                          >
                                                            <WithStyles(IconButton)
                                                              className="sc-jTzLTM kokRiH"
                                                              id="share-link"
                                                            >
                                                              <IconButton
                                                                className="sc-jTzLTM kokRiH"
                                                                classes={
                                                                  Object {
                                                                    "colorInherit": "MuiIconButton-colorInherit-3",
                                                                    "colorPrimary": "MuiIconButton-colorPrimary-4",
                                                                    "colorSecondary": "MuiIconButton-colorSecondary-5",
                                                                    "disabled": "MuiIconButton-disabled-6",
                                                                    "label": "MuiIconButton-label-7",
                                                                    "root": "MuiIconButton-root-2",
                                                                  }
                                                                }
                                                                color="default"
                                                                disabled={false}
                                                                id="share-link"
                                                              >
                                                                <WithStyles(ButtonBase)
                                                                  centerRipple={true}
                                                                  className="MuiIconButton-root-2 sc-jTzLTM kokRiH"
                                                                  disabled={false}
                                                                  focusRipple={true}
                                                                  id="share-link"
                                                                >
                                                                  <ButtonBase
                                                                    centerRipple={true}
                                                                    className="MuiIconButton-root-2 sc-jTzLTM kokRiH"
                                                                    classes={
                                                                      Object {
                                                                        "disabled": "MuiButtonBase-disabled-9",
                                                                        "focusVisible": "MuiButtonBase-focusVisible-10",
                                                                        "root": "MuiButtonBase-root-8",
                                                                      }
                                                                    }
                                                                    component="button"
                                                                    disableRipple={false}
                                                                    disableTouchRipple={false}
                                                                    disabled={false}
                                                                    focusRipple={true}
                                                                    id="share-link"
                                                                    tabIndex="0"
                                                                    type="button"
                                                                  >
                                                                    <button
                                                                      className="MuiButtonBase-root-8 MuiIconButton-root-2 sc-jTzLTM kokRiH"
                                                                      disabled={false}
                                                                      id="share-link"
                                                                      onBlur={[Function]}
                                                                      onContextMenu={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onKeyUp={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      onMouseUp={[Function]}
                                                                      onTouchEnd={[Function]}
                                                                      onTouchMove={[Function]}
                                                                      onTouchStart={[Function]}
                                                                      tabIndex="0"
                                                                      type="button"
                                                                    >
                                                                      <span
                                                                        className="MuiIconButton-label-7"
                                                                      >
                                                                        <WithStyles(Icon)
                                                                          style={
                                                                            Object {
                                                                              "fontSize": "16px",
                                                                            }
                                                                          }
                                                                        >
                                                                          <Icon
                                                                            classes={
                                                                              Object {
                                                                                "colorAction": "MuiIcon-colorAction-14",
                                                                                "colorDisabled": "MuiIcon-colorDisabled-16",
                                                                                "colorError": "MuiIcon-colorError-15",
                                                                                "colorPrimary": "MuiIcon-colorPrimary-12",
                                                                                "colorSecondary": "MuiIcon-colorSecondary-13",
                                                                                "fontSizeInherit": "MuiIcon-fontSizeInherit-17",
                                                                                "fontSizeLarge": "MuiIcon-fontSizeLarge-19",
                                                                                "fontSizeSmall": "MuiIcon-fontSizeSmall-18",
                                                                                "root": "MuiIcon-root-11",
                                                                              }
                                                                            }
                                                                            color="inherit"
                                                                            component="span"
                                                                            fontSize="default"
                                                                            style={
                                                                              Object {
                                                                                "fontSize": "16px",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              aria-hidden="true"
                                                                              className="material-icons MuiIcon-root-11"
                                                                              style={
                                                                                Object {
                                                                                  "fontSize": "16px",
                                                                                }
                                                                              }
                                                                            >
                                                                              insert_link
                                                                            </span>
                                                                          </Icon>
                                                                        </WithStyles(Icon)>
                                                                      </span>
                                                                      <NoSsr
                                                                        defer={false}
                                                                        fallback={null}
                                                                      >
                                                                        <WithStyles(TouchRipple)
                                                                          center={true}
                                                                          innerRef={[Function]}
                                                                        >
                                                                          <TouchRipple
                                                                            center={true}
                                                                            classes={
                                                                              Object {
                                                                                "child": "MuiTouchRipple-child-112",
                                                                                "childLeaving": "MuiTouchRipple-childLeaving-113",
                                                                                "childPulsate": "MuiTouchRipple-childPulsate-114",
                                                                                "ripple": "MuiTouchRipple-ripple-109",
                                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate-111",
                                                                                "rippleVisible": "MuiTouchRipple-rippleVisible-110",
                                                                                "root": "MuiTouchRipple-root-108",
                                                                              }
                                                                            }
                                                                          >
                                                                            <TransitionGroup
                                                                              childFactory={[Function]}
                                                                              className="MuiTouchRipple-root-108"
                                                                              component="span"
                                                                              enter={true}
                                                                              exit={true}
                                                                            >
                                                                              <span
                                                                                className="MuiTouchRipple-root-108"
                                                                              />
                                                                            </TransitionGroup>
                                                                          </TouchRipple>
                                                                        </WithStyles(TouchRipple)>
                                                                      </NoSsr>
                                                                    </button>
                                                                  </ButtonBase>
                                                                </WithStyles(ButtonBase)>
                                                              </IconButton>
                                                            </WithStyles(IconButton)>
                                                          </StyledComponent>
                                                        </Styled(WithStyles(IconButton))>
                                                      </a>
                                                    </ClipboardButton>
                                                  </div>
                                                </StyledComponent>
                                              </styled.div>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </Notification>
                          <Message
                            date={2019-02-04T23:55:17.782Z}
                            key="message-0"
                            text="How are you doing?"
                            type="own"
                            user={
                              Object {
                                "avatar": "metal",
                                "id": 42,
                                "name": "Dude",
                              }
                            }
                          >
                            <styled.div
                              type="own"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": false,
                                      "lastClassName": "llljKx",
                                      "rules": Array [
                                        "
  display: flex;
  flex-direction: row-reverse;
  margin-bottom: 5px;

  ",
                                        [Function],
                                        "
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                type="own"
                              >
                                <div
                                  className="sc-bdVaJa ViWBm"
                                  type="own"
                                >
                                  <Avatar
                                    avatar="metal"
                                  >
                                    <WithStyles(Icon)
                                      style={
                                        Object {
                                          "fontSize": "50px",
                                        }
                                      }
                                    >
                                      <Icon
                                        classes={
                                          Object {
                                            "colorAction": "MuiIcon-colorAction-14",
                                            "colorDisabled": "MuiIcon-colorDisabled-16",
                                            "colorError": "MuiIcon-colorError-15",
                                            "colorPrimary": "MuiIcon-colorPrimary-12",
                                            "colorSecondary": "MuiIcon-colorSecondary-13",
                                            "fontSizeInherit": "MuiIcon-fontSizeInherit-17",
                                            "fontSizeLarge": "MuiIcon-fontSizeLarge-19",
                                            "fontSizeSmall": "MuiIcon-fontSizeSmall-18",
                                            "root": "MuiIcon-root-11",
                                          }
                                        }
                                        color="inherit"
                                        component="span"
                                        fontSize="default"
                                        style={
                                          Object {
                                            "fontSize": "50px",
                                          }
                                        }
                                      >
                                        <span
                                          aria-hidden="true"
                                          className="material-icons MuiIcon-root-11"
                                          style={
                                            Object {
                                              "fontSize": "50px",
                                            }
                                          }
                                        >
                                          metal
                                        </span>
                                      </Icon>
                                    </WithStyles(Icon)>
                                  </Avatar>
                                  <styled.div
                                    type="own"
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-bwzfXH",
                                            "isStatic": false,
                                            "lastClassName": "kvCxrc",
                                            "rules": Array [
                                              "
  width: 50%;
  display: flex;
  width: 100%;
  margin: 0 10px;
  justify-content: flex-end;

  ",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-bwzfXH",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      type="own"
                                    >
                                      <div
                                        className="sc-bwzfXH eKYpts"
                                        type="own"
                                      >
                                        <styled.div
                                          type="own"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-bxivhb",
                                                  "isStatic": false,
                                                  "lastClassName": "gqaAOW",
                                                  "rules": Array [
                                                    "
  width: 50%;
  background: ",
                                                    "rgba(150, 150, 150, 0.2)",
                                                    ";
  color: #eee;
  padding: 20px 10px 5px 10px;
  border-radius: 5px;
  min-width: 220px;
  position: relative;
  word-break: break-word;

  > p {
    word-break: break-word;
  }

  :before {
    content: '';
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 5px 0 5px 7px;
    border-color: transparent transparent transparent
      ",
                                                    "rgba(150, 150, 150, 0.2)",
                                                    ";
    position: absolute;
    top: 9px;
    right: -7px;

    ",
                                                    [Function],
                                                    "
  }

  ",
                                                    [Function],
                                                    "
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-bxivhb",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            type="own"
                                          >
                                            <div
                                              className="sc-bxivhb bFaqhi"
                                              type="own"
                                            >
                                              <styled.div>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-htpNat",
                                                        "isStatic": true,
                                                        "lastClassName": "dUjCyT",
                                                        "rules": Array [
                                                          "
  position: absolute;
  top: 5px;
  left: 10px;

  p {
    color: #aaa;
    font-size: 0.75rem;
    font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;
    font-weight: 400;
    letter-spacing: 0.03333em;
    margin: 0;
  }
",
                                                        ],
                                                      },
                                                      "displayName": "styled.div",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-htpNat",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <div
                                                    className="sc-htpNat dUjCyT"
                                                  >
                                                    <p>
                                                      February 5th 2019, 12:24:29 pm
                                                    </p>
                                                  </div>
                                                </StyledComponent>
                                              </styled.div>
                                              <WithStyles(Typography)>
                                                <Typography
                                                  align="inherit"
                                                  classes={
                                                    Object {
                                                      "alignCenter": "MuiTypography-alignCenter-43",
                                                      "alignJustify": "MuiTypography-alignJustify-45",
                                                      "alignLeft": "MuiTypography-alignLeft-42",
                                                      "alignRight": "MuiTypography-alignRight-44",
                                                      "body1": "MuiTypography-body1-29",
                                                      "body2": "MuiTypography-body2-28",
                                                      "button": "MuiTypography-button-31",
                                                      "caption": "MuiTypography-caption-30",
                                                      "colorError": "MuiTypography-colorError-54",
                                                      "colorInherit": "MuiTypography-colorInherit-49",
                                                      "colorPrimary": "MuiTypography-colorPrimary-50",
                                                      "colorSecondary": "MuiTypography-colorSecondary-51",
                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary-52",
                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary-53",
                                                      "display1": "MuiTypography-display1-24",
                                                      "display2": "MuiTypography-display2-23",
                                                      "display3": "MuiTypography-display3-22",
                                                      "display4": "MuiTypography-display4-21",
                                                      "gutterBottom": "MuiTypography-gutterBottom-47",
                                                      "h1": "MuiTypography-h1-32",
                                                      "h2": "MuiTypography-h2-33",
                                                      "h3": "MuiTypography-h3-34",
                                                      "h4": "MuiTypography-h4-35",
                                                      "h5": "MuiTypography-h5-36",
                                                      "h6": "MuiTypography-h6-37",
                                                      "headline": "MuiTypography-headline-25",
                                                      "inline": "MuiTypography-inline-55",
                                                      "noWrap": "MuiTypography-noWrap-46",
                                                      "overline": "MuiTypography-overline-40",
                                                      "paragraph": "MuiTypography-paragraph-48",
                                                      "root": "MuiTypography-root-20",
                                                      "srOnly": "MuiTypography-srOnly-41",
                                                      "subheading": "MuiTypography-subheading-27",
                                                      "subtitle1": "MuiTypography-subtitle1-38",
                                                      "subtitle2": "MuiTypography-subtitle2-39",
                                                      "title": "MuiTypography-title-26",
                                                    }
                                                  }
                                                  color="default"
                                                  gutterBottom={false}
                                                  headlineMapping={
                                                    Object {
                                                      "body1": "p",
                                                      "body2": "p",
                                                      "display1": "h1",
                                                      "display2": "h1",
                                                      "display3": "h1",
                                                      "display4": "h1",
                                                      "h1": "h1",
                                                      "h2": "h2",
                                                      "h3": "h3",
                                                      "h4": "h4",
                                                      "h5": "h5",
                                                      "h6": "h6",
                                                      "headline": "h1",
                                                      "subheading": "h3",
                                                      "subtitle1": "h6",
                                                      "subtitle2": "h6",
                                                      "title": "h2",
                                                    }
                                                  }
                                                  inline={false}
                                                  noWrap={false}
                                                  paragraph={false}
                                                  theme={
                                                    Object {
                                                      "breakpoints": Object {
                                                        "between": [Function],
                                                        "down": [Function],
                                                        "keys": Array [
                                                          "xs",
                                                          "sm",
                                                          "md",
                                                          "lg",
                                                          "xl",
                                                        ],
                                                        "only": [Function],
                                                        "up": [Function],
                                                        "values": Object {
                                                          "lg": 1280,
                                                          "md": 960,
                                                          "sm": 600,
                                                          "xl": 1920,
                                                          "xs": 0,
                                                        },
                                                        "width": [Function],
                                                      },
                                                      "direction": "ltr",
                                                      "mixins": Object {
                                                        "gutters": [Function],
                                                        "toolbar": Object {
                                                          "@media (min-width:0px) and (orientation: landscape)": Object {
                                                            "minHeight": 48,
                                                          },
                                                          "@media (min-width:600px)": Object {
                                                            "minHeight": 64,
                                                          },
                                                          "minHeight": 56,
                                                        },
                                                      },
                                                      "overrides": Object {},
                                                      "palette": Object {
                                                        "action": Object {
                                                          "active": "rgba(0, 0, 0, 0.54)",
                                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                          "hover": "rgba(0, 0, 0, 0.08)",
                                                          "hoverOpacity": 0.08,
                                                          "selected": "rgba(0, 0, 0, 0.14)",
                                                        },
                                                        "augmentColor": [Function],
                                                        "background": Object {
                                                          "default": "#fafafa",
                                                          "paper": "#fff",
                                                        },
                                                        "common": Object {
                                                          "black": "#000",
                                                          "white": "#fff",
                                                        },
                                                        "contrastThreshold": 3,
                                                        "divider": "rgba(0, 0, 0, 0.12)",
                                                        "error": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#d32f2f",
                                                          "light": "#e57373",
                                                          "main": "#f44336",
                                                        },
                                                        "getContrastText": [Function],
                                                        "grey": Object {
                                                          "100": "#f5f5f5",
                                                          "200": "#eeeeee",
                                                          "300": "#e0e0e0",
                                                          "400": "#bdbdbd",
                                                          "50": "#fafafa",
                                                          "500": "#9e9e9e",
                                                          "600": "#757575",
                                                          "700": "#616161",
                                                          "800": "#424242",
                                                          "900": "#212121",
                                                          "A100": "#d5d5d5",
                                                          "A200": "#aaaaaa",
                                                          "A400": "#303030",
                                                          "A700": "#616161",
                                                        },
                                                        "primary": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#303f9f",
                                                          "light": "#7986cb",
                                                          "main": "#3f51b5",
                                                        },
                                                        "secondary": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#c51162",
                                                          "light": "#ff4081",
                                                          "main": "#f50057",
                                                        },
                                                        "text": Object {
                                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                                          "hint": "rgba(0, 0, 0, 0.38)",
                                                          "primary": "rgba(0, 0, 0, 0.87)",
                                                          "secondary": "rgba(0, 0, 0, 0.54)",
                                                        },
                                                        "tonalOffset": 0.2,
                                                        "type": "light",
                                                      },
                                                      "props": Object {},
                                                      "shadows": Array [
                                                        "none",
                                                        "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                                        "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                                        "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                      ],
                                                      "shape": Object {
                                                        "borderRadius": 4,
                                                      },
                                                      "spacing": Object {
                                                        "unit": 8,
                                                      },
                                                      "transitions": Object {
                                                        "create": [Function],
                                                        "duration": Object {
                                                          "complex": 375,
                                                          "enteringScreen": 225,
                                                          "leavingScreen": 195,
                                                          "short": 250,
                                                          "shorter": 200,
                                                          "shortest": 150,
                                                          "standard": 300,
                                                        },
                                                        "easing": Object {
                                                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                        },
                                                        "getAutoHeightDuration": [Function],
                                                      },
                                                      "typography": Object {
                                                        "body1": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 400,
                                                          "lineHeight": "1.46429em",
                                                        },
                                                        "body1Next": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.00938em",
                                                          "lineHeight": 1.5,
                                                        },
                                                        "body2": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 500,
                                                          "lineHeight": "1.71429em",
                                                        },
                                                        "body2Next": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.01071em",
                                                          "lineHeight": 1.5,
                                                        },
                                                        "button": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 500,
                                                          "textTransform": "uppercase",
                                                        },
                                                        "buttonNext": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 500,
                                                          "letterSpacing": "0.02857em",
                                                          "lineHeight": 1.75,
                                                          "textTransform": "uppercase",
                                                        },
                                                        "caption": Object {
                                                          "color": "rgba(0, 0, 0, 0.54)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.75rem",
                                                          "fontWeight": 400,
                                                          "lineHeight": "1.375em",
                                                        },
                                                        "captionNext": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.75rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.03333em",
                                                          "lineHeight": 1.66,
                                                        },
                                                        "display1": Object {
                                                          "color": "rgba(0, 0, 0, 0.54)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "2.125rem",
                                                          "fontWeight": 400,
                                                          "lineHeight": "1.20588em",
                                                        },
                                                        "display2": Object {
                                                          "color": "rgba(0, 0, 0, 0.54)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "2.8125rem",
                                                          "fontWeight": 400,
                                                          "lineHeight": "1.13333em",
                                                          "marginLeft": "-.02em",
                                                        },
                                                        "display3": Object {
                                                          "color": "rgba(0, 0, 0, 0.54)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "3.5rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "-.02em",
                                                          "lineHeight": "1.30357em",
                                                          "marginLeft": "-.02em",
                                                        },
                                                        "display4": Object {
                                                          "color": "rgba(0, 0, 0, 0.54)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "7rem",
                                                          "fontWeight": 300,
                                                          "letterSpacing": "-.04em",
                                                          "lineHeight": "1.14286em",
                                                          "marginLeft": "-.04em",
                                                        },
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": 14,
                                                        "fontWeightLight": 300,
                                                        "fontWeightMedium": 500,
                                                        "fontWeightRegular": 400,
                                                        "h1": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "6rem",
                                                          "fontWeight": 300,
                                                          "letterSpacing": "-0.01562em",
                                                          "lineHeight": 1,
                                                        },
                                                        "h2": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "3.75rem",
                                                          "fontWeight": 300,
                                                          "letterSpacing": "-0.00833em",
                                                          "lineHeight": 1,
                                                        },
                                                        "h3": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "3rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0em",
                                                          "lineHeight": 1.04,
                                                        },
                                                        "h4": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "2.125rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.00735em",
                                                          "lineHeight": 1.17,
                                                        },
                                                        "h5": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1.5rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0em",
                                                          "lineHeight": 1.33,
                                                        },
                                                        "h6": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1.25rem",
                                                          "fontWeight": 500,
                                                          "letterSpacing": "0.0075em",
                                                          "lineHeight": 1.6,
                                                        },
                                                        "headline": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1.5rem",
                                                          "fontWeight": 400,
                                                          "lineHeight": "1.35417em",
                                                        },
                                                        "overline": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.75rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.08333em",
                                                          "lineHeight": 2.66,
                                                          "textTransform": "uppercase",
                                                        },
                                                        "pxToRem": [Function],
                                                        "round": [Function],
                                                        "subheading": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1rem",
                                                          "fontWeight": 400,
                                                          "lineHeight": "1.5em",
                                                        },
                                                        "subtitle1": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.00938em",
                                                          "lineHeight": 1.75,
                                                        },
                                                        "subtitle2": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 500,
                                                          "letterSpacing": "0.00714em",
                                                          "lineHeight": 1.57,
                                                        },
                                                        "title": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1.3125rem",
                                                          "fontWeight": 500,
                                                          "lineHeight": "1.16667em",
                                                        },
                                                        "useNextVariants": false,
                                                      },
                                                      "zIndex": Object {
                                                        "appBar": 1100,
                                                        "drawer": 1200,
                                                        "mobileStepper": 1000,
                                                        "modal": 1300,
                                                        "snackbar": 1400,
                                                        "tooltip": 1500,
                                                      },
                                                    }
                                                  }
                                                >
                                                  <p
                                                    className="MuiTypography-root-20 MuiTypography-body1-29"
                                                  >
                                                    <b>
                                                      Dude
                                                    </b>
                                                  </p>
                                                </Typography>
                                              </WithStyles(Typography)>
                                              <span>
                                                How are you doing?
                                              </span>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </Message>
                          <Message
                            date={2019-02-04T23:55:17.782Z}
                            key="message-1"
                            text="Confortably numb."
                            type="peer"
                            user={
                              Object {
                                "avatar": "rock",
                                "id": 86,
                                "name": "David Gilmour",
                              }
                            }
                          >
                            <styled.div
                              type="peer"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": false,
                                      "lastClassName": "llljKx",
                                      "rules": Array [
                                        "
  display: flex;
  flex-direction: row-reverse;
  margin-bottom: 5px;

  ",
                                        [Function],
                                        "
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                type="peer"
                              >
                                <div
                                  className="sc-bdVaJa llljKx"
                                  type="peer"
                                >
                                  <Avatar
                                    avatar="rock"
                                  >
                                    <WithStyles(Icon)
                                      style={
                                        Object {
                                          "fontSize": "50px",
                                        }
                                      }
                                    >
                                      <Icon
                                        classes={
                                          Object {
                                            "colorAction": "MuiIcon-colorAction-14",
                                            "colorDisabled": "MuiIcon-colorDisabled-16",
                                            "colorError": "MuiIcon-colorError-15",
                                            "colorPrimary": "MuiIcon-colorPrimary-12",
                                            "colorSecondary": "MuiIcon-colorSecondary-13",
                                            "fontSizeInherit": "MuiIcon-fontSizeInherit-17",
                                            "fontSizeLarge": "MuiIcon-fontSizeLarge-19",
                                            "fontSizeSmall": "MuiIcon-fontSizeSmall-18",
                                            "root": "MuiIcon-root-11",
                                          }
                                        }
                                        color="inherit"
                                        component="span"
                                        fontSize="default"
                                        style={
                                          Object {
                                            "fontSize": "50px",
                                          }
                                        }
                                      >
                                        <span
                                          aria-hidden="true"
                                          className="material-icons MuiIcon-root-11"
                                          style={
                                            Object {
                                              "fontSize": "50px",
                                            }
                                          }
                                        >
                                          rock
                                        </span>
                                      </Icon>
                                    </WithStyles(Icon)>
                                  </Avatar>
                                  <styled.div
                                    type="peer"
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-bwzfXH",
                                            "isStatic": false,
                                            "lastClassName": "kvCxrc",
                                            "rules": Array [
                                              "
  width: 50%;
  display: flex;
  width: 100%;
  margin: 0 10px;
  justify-content: flex-end;

  ",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-bwzfXH",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      type="peer"
                                    >
                                      <div
                                        className="sc-bwzfXH kvCxrc"
                                        type="peer"
                                      >
                                        <styled.div
                                          type="peer"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-bxivhb",
                                                  "isStatic": false,
                                                  "lastClassName": "gqaAOW",
                                                  "rules": Array [
                                                    "
  width: 50%;
  background: ",
                                                    "rgba(150, 150, 150, 0.2)",
                                                    ";
  color: #eee;
  padding: 20px 10px 5px 10px;
  border-radius: 5px;
  min-width: 220px;
  position: relative;
  word-break: break-word;

  > p {
    word-break: break-word;
  }

  :before {
    content: '';
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 5px 0 5px 7px;
    border-color: transparent transparent transparent
      ",
                                                    "rgba(150, 150, 150, 0.2)",
                                                    ";
    position: absolute;
    top: 9px;
    right: -7px;

    ",
                                                    [Function],
                                                    "
  }

  ",
                                                    [Function],
                                                    "
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-bxivhb",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            type="peer"
                                          >
                                            <div
                                              className="sc-bxivhb gqaAOW"
                                              type="peer"
                                            >
                                              <styled.div>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-htpNat",
                                                        "isStatic": true,
                                                        "lastClassName": "dUjCyT",
                                                        "rules": Array [
                                                          "
  position: absolute;
  top: 5px;
  left: 10px;

  p {
    color: #aaa;
    font-size: 0.75rem;
    font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;
    font-weight: 400;
    letter-spacing: 0.03333em;
    margin: 0;
  }
",
                                                        ],
                                                      },
                                                      "displayName": "styled.div",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-htpNat",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <div
                                                    className="sc-htpNat dUjCyT"
                                                  >
                                                    <p>
                                                      February 5th 2019, 12:24:29 pm
                                                    </p>
                                                  </div>
                                                </StyledComponent>
                                              </styled.div>
                                              <WithStyles(Typography)>
                                                <Typography
                                                  align="inherit"
                                                  classes={
                                                    Object {
                                                      "alignCenter": "MuiTypography-alignCenter-43",
                                                      "alignJustify": "MuiTypography-alignJustify-45",
                                                      "alignLeft": "MuiTypography-alignLeft-42",
                                                      "alignRight": "MuiTypography-alignRight-44",
                                                      "body1": "MuiTypography-body1-29",
                                                      "body2": "MuiTypography-body2-28",
                                                      "button": "MuiTypography-button-31",
                                                      "caption": "MuiTypography-caption-30",
                                                      "colorError": "MuiTypography-colorError-54",
                                                      "colorInherit": "MuiTypography-colorInherit-49",
                                                      "colorPrimary": "MuiTypography-colorPrimary-50",
                                                      "colorSecondary": "MuiTypography-colorSecondary-51",
                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary-52",
                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary-53",
                                                      "display1": "MuiTypography-display1-24",
                                                      "display2": "MuiTypography-display2-23",
                                                      "display3": "MuiTypography-display3-22",
                                                      "display4": "MuiTypography-display4-21",
                                                      "gutterBottom": "MuiTypography-gutterBottom-47",
                                                      "h1": "MuiTypography-h1-32",
                                                      "h2": "MuiTypography-h2-33",
                                                      "h3": "MuiTypography-h3-34",
                                                      "h4": "MuiTypography-h4-35",
                                                      "h5": "MuiTypography-h5-36",
                                                      "h6": "MuiTypography-h6-37",
                                                      "headline": "MuiTypography-headline-25",
                                                      "inline": "MuiTypography-inline-55",
                                                      "noWrap": "MuiTypography-noWrap-46",
                                                      "overline": "MuiTypography-overline-40",
                                                      "paragraph": "MuiTypography-paragraph-48",
                                                      "root": "MuiTypography-root-20",
                                                      "srOnly": "MuiTypography-srOnly-41",
                                                      "subheading": "MuiTypography-subheading-27",
                                                      "subtitle1": "MuiTypography-subtitle1-38",
                                                      "subtitle2": "MuiTypography-subtitle2-39",
                                                      "title": "MuiTypography-title-26",
                                                    }
                                                  }
                                                  color="default"
                                                  gutterBottom={false}
                                                  headlineMapping={
                                                    Object {
                                                      "body1": "p",
                                                      "body2": "p",
                                                      "display1": "h1",
                                                      "display2": "h1",
                                                      "display3": "h1",
                                                      "display4": "h1",
                                                      "h1": "h1",
                                                      "h2": "h2",
                                                      "h3": "h3",
                                                      "h4": "h4",
                                                      "h5": "h5",
                                                      "h6": "h6",
                                                      "headline": "h1",
                                                      "subheading": "h3",
                                                      "subtitle1": "h6",
                                                      "subtitle2": "h6",
                                                      "title": "h2",
                                                    }
                                                  }
                                                  inline={false}
                                                  noWrap={false}
                                                  paragraph={false}
                                                  theme={
                                                    Object {
                                                      "breakpoints": Object {
                                                        "between": [Function],
                                                        "down": [Function],
                                                        "keys": Array [
                                                          "xs",
                                                          "sm",
                                                          "md",
                                                          "lg",
                                                          "xl",
                                                        ],
                                                        "only": [Function],
                                                        "up": [Function],
                                                        "values": Object {
                                                          "lg": 1280,
                                                          "md": 960,
                                                          "sm": 600,
                                                          "xl": 1920,
                                                          "xs": 0,
                                                        },
                                                        "width": [Function],
                                                      },
                                                      "direction": "ltr",
                                                      "mixins": Object {
                                                        "gutters": [Function],
                                                        "toolbar": Object {
                                                          "@media (min-width:0px) and (orientation: landscape)": Object {
                                                            "minHeight": 48,
                                                          },
                                                          "@media (min-width:600px)": Object {
                                                            "minHeight": 64,
                                                          },
                                                          "minHeight": 56,
                                                        },
                                                      },
                                                      "overrides": Object {},
                                                      "palette": Object {
                                                        "action": Object {
                                                          "active": "rgba(0, 0, 0, 0.54)",
                                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                          "hover": "rgba(0, 0, 0, 0.08)",
                                                          "hoverOpacity": 0.08,
                                                          "selected": "rgba(0, 0, 0, 0.14)",
                                                        },
                                                        "augmentColor": [Function],
                                                        "background": Object {
                                                          "default": "#fafafa",
                                                          "paper": "#fff",
                                                        },
                                                        "common": Object {
                                                          "black": "#000",
                                                          "white": "#fff",
                                                        },
                                                        "contrastThreshold": 3,
                                                        "divider": "rgba(0, 0, 0, 0.12)",
                                                        "error": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#d32f2f",
                                                          "light": "#e57373",
                                                          "main": "#f44336",
                                                        },
                                                        "getContrastText": [Function],
                                                        "grey": Object {
                                                          "100": "#f5f5f5",
                                                          "200": "#eeeeee",
                                                          "300": "#e0e0e0",
                                                          "400": "#bdbdbd",
                                                          "50": "#fafafa",
                                                          "500": "#9e9e9e",
                                                          "600": "#757575",
                                                          "700": "#616161",
                                                          "800": "#424242",
                                                          "900": "#212121",
                                                          "A100": "#d5d5d5",
                                                          "A200": "#aaaaaa",
                                                          "A400": "#303030",
                                                          "A700": "#616161",
                                                        },
                                                        "primary": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#303f9f",
                                                          "light": "#7986cb",
                                                          "main": "#3f51b5",
                                                        },
                                                        "secondary": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#c51162",
                                                          "light": "#ff4081",
                                                          "main": "#f50057",
                                                        },
                                                        "text": Object {
                                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                                          "hint": "rgba(0, 0, 0, 0.38)",
                                                          "primary": "rgba(0, 0, 0, 0.87)",
                                                          "secondary": "rgba(0, 0, 0, 0.54)",
                                                        },
                                                        "tonalOffset": 0.2,
                                                        "type": "light",
                                                      },
                                                      "props": Object {},
                                                      "shadows": Array [
                                                        "none",
                                                        "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                                        "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                                        "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                      ],
                                                      "shape": Object {
                                                        "borderRadius": 4,
                                                      },
                                                      "spacing": Object {
                                                        "unit": 8,
                                                      },
                                                      "transitions": Object {
                                                        "create": [Function],
                                                        "duration": Object {
                                                          "complex": 375,
                                                          "enteringScreen": 225,
                                                          "leavingScreen": 195,
                                                          "short": 250,
                                                          "shorter": 200,
                                                          "shortest": 150,
                                                          "standard": 300,
                                                        },
                                                        "easing": Object {
                                                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                        },
                                                        "getAutoHeightDuration": [Function],
                                                      },
                                                      "typography": Object {
                                                        "body1": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 400,
                                                          "lineHeight": "1.46429em",
                                                        },
                                                        "body1Next": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.00938em",
                                                          "lineHeight": 1.5,
                                                        },
                                                        "body2": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 500,
                                                          "lineHeight": "1.71429em",
                                                        },
                                                        "body2Next": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.01071em",
                                                          "lineHeight": 1.5,
                                                        },
                                                        "button": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 500,
                                                          "textTransform": "uppercase",
                                                        },
                                                        "buttonNext": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 500,
                                                          "letterSpacing": "0.02857em",
                                                          "lineHeight": 1.75,
                                                          "textTransform": "uppercase",
                                                        },
                                                        "caption": Object {
                                                          "color": "rgba(0, 0, 0, 0.54)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.75rem",
                                                          "fontWeight": 400,
                                                          "lineHeight": "1.375em",
                                                        },
                                                        "captionNext": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.75rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.03333em",
                                                          "lineHeight": 1.66,
                                                        },
                                                        "display1": Object {
                                                          "color": "rgba(0, 0, 0, 0.54)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "2.125rem",
                                                          "fontWeight": 400,
                                                          "lineHeight": "1.20588em",
                                                        },
                                                        "display2": Object {
                                                          "color": "rgba(0, 0, 0, 0.54)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "2.8125rem",
                                                          "fontWeight": 400,
                                                          "lineHeight": "1.13333em",
                                                          "marginLeft": "-.02em",
                                                        },
                                                        "display3": Object {
                                                          "color": "rgba(0, 0, 0, 0.54)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "3.5rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "-.02em",
                                                          "lineHeight": "1.30357em",
                                                          "marginLeft": "-.02em",
                                                        },
                                                        "display4": Object {
                                                          "color": "rgba(0, 0, 0, 0.54)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "7rem",
                                                          "fontWeight": 300,
                                                          "letterSpacing": "-.04em",
                                                          "lineHeight": "1.14286em",
                                                          "marginLeft": "-.04em",
                                                        },
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": 14,
                                                        "fontWeightLight": 300,
                                                        "fontWeightMedium": 500,
                                                        "fontWeightRegular": 400,
                                                        "h1": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "6rem",
                                                          "fontWeight": 300,
                                                          "letterSpacing": "-0.01562em",
                                                          "lineHeight": 1,
                                                        },
                                                        "h2": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "3.75rem",
                                                          "fontWeight": 300,
                                                          "letterSpacing": "-0.00833em",
                                                          "lineHeight": 1,
                                                        },
                                                        "h3": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "3rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0em",
                                                          "lineHeight": 1.04,
                                                        },
                                                        "h4": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "2.125rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.00735em",
                                                          "lineHeight": 1.17,
                                                        },
                                                        "h5": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1.5rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0em",
                                                          "lineHeight": 1.33,
                                                        },
                                                        "h6": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1.25rem",
                                                          "fontWeight": 500,
                                                          "letterSpacing": "0.0075em",
                                                          "lineHeight": 1.6,
                                                        },
                                                        "headline": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1.5rem",
                                                          "fontWeight": 400,
                                                          "lineHeight": "1.35417em",
                                                        },
                                                        "overline": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.75rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.08333em",
                                                          "lineHeight": 2.66,
                                                          "textTransform": "uppercase",
                                                        },
                                                        "pxToRem": [Function],
                                                        "round": [Function],
                                                        "subheading": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1rem",
                                                          "fontWeight": 400,
                                                          "lineHeight": "1.5em",
                                                        },
                                                        "subtitle1": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.00938em",
                                                          "lineHeight": 1.75,
                                                        },
                                                        "subtitle2": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 500,
                                                          "letterSpacing": "0.00714em",
                                                          "lineHeight": 1.57,
                                                        },
                                                        "title": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1.3125rem",
                                                          "fontWeight": 500,
                                                          "lineHeight": "1.16667em",
                                                        },
                                                        "useNextVariants": false,
                                                      },
                                                      "zIndex": Object {
                                                        "appBar": 1100,
                                                        "drawer": 1200,
                                                        "mobileStepper": 1000,
                                                        "modal": 1300,
                                                        "snackbar": 1400,
                                                        "tooltip": 1500,
                                                      },
                                                    }
                                                  }
                                                >
                                                  <p
                                                    className="MuiTypography-root-20 MuiTypography-body1-29"
                                                  >
                                                    <b>
                                                      David Gilmour
                                                    </b>
                                                  </p>
                                                </Typography>
                                              </WithStyles(Typography)>
                                              <span>
                                                Confortably numb.
                                              </span>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </Message>
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-gZMcBi",
                              "isStatic": true,
                              "lastClassName": "iVpYKE",
                              "rules": Array [
                                "
  display: flex;
  justify-content: space-around;
  align-items: center;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-gZMcBi",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-gZMcBi iVpYKE"
                        >
                          <Styled(TextField)
                            autoFocus={true}
                            id="message-input"
                            label="Message"
                            margin="normal"
                            name="message-input"
                            onChange={[Function]}
                            onKeyPress={[Function]}
                            value=""
                          >
                            <StyledComponent
                              autoFocus={true}
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-VigVT",
                                    "isStatic": true,
                                    "lastClassName": "gtJKdb",
                                    "rules": Array [
                                      "
  flex: 1;
",
                                    ],
                                  },
                                  "displayName": "Styled(TextField)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-VigVT",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                  Symbol(Symbol.hasInstance): [Function],
                                }
                              }
                              forwardedRef={null}
                              id="message-input"
                              label="Message"
                              margin="normal"
                              name="message-input"
                              onChange={[Function]}
                              onKeyPress={[Function]}
                              value=""
                            >
                              <TextField
                                autoFocus={true}
                                className="sc-VigVT gtJKdb"
                                id="message-input"
                                label="Message"
                                margin="normal"
                                name="message-input"
                                onChange={[Function]}
                                onKeyPress={[Function]}
                                required={false}
                                select={false}
                                value=""
                                variant="standard"
                              >
                                <WithStyles(FormControl)
                                  className="sc-VigVT gtJKdb"
                                  margin="normal"
                                  onKeyPress={[Function]}
                                  required={false}
                                  variant="standard"
                                >
                                  <FormControl
                                    className="sc-VigVT gtJKdb"
                                    classes={
                                      Object {
                                        "fullWidth": "MuiFormControl-fullWidth-59",
                                        "marginDense": "MuiFormControl-marginDense-58",
                                        "marginNormal": "MuiFormControl-marginNormal-57",
                                        "root": "MuiFormControl-root-56",
                                      }
                                    }
                                    component="div"
                                    disabled={false}
                                    error={false}
                                    fullWidth={false}
                                    margin="normal"
                                    onKeyPress={[Function]}
                                    required={false}
                                    variant="standard"
                                  >
                                    <div
                                      className="MuiFormControl-root-56 MuiFormControl-marginNormal-57 sc-VigVT gtJKdb"
                                      onKeyPress={[Function]}
                                    >
                                      <WithStyles(WithFormControlContext(InputLabel))
                                        htmlFor="message-input"
                                      >
                                        <WithFormControlContext(InputLabel)
                                          classes={
                                            Object {
                                              "animated": "MuiInputLabel-animated-68",
                                              "disabled": "MuiInputLabel-disabled-62",
                                              "error": "MuiInputLabel-error-63",
                                              "filled": "MuiInputLabel-filled-69",
                                              "focused": "MuiInputLabel-focused-61",
                                              "formControl": "MuiInputLabel-formControl-65",
                                              "marginDense": "MuiInputLabel-marginDense-66",
                                              "outlined": "MuiInputLabel-outlined-70",
                                              "required": "MuiInputLabel-required-64",
                                              "root": "MuiInputLabel-root-60",
                                              "shrink": "MuiInputLabel-shrink-67",
                                            }
                                          }
                                          htmlFor="message-input"
                                        >
                                          <InputLabel
                                            classes={
                                              Object {
                                                "animated": "MuiInputLabel-animated-68",
                                                "disabled": "MuiInputLabel-disabled-62",
                                                "error": "MuiInputLabel-error-63",
                                                "filled": "MuiInputLabel-filled-69",
                                                "focused": "MuiInputLabel-focused-61",
                                                "formControl": "MuiInputLabel-formControl-65",
                                                "marginDense": "MuiInputLabel-marginDense-66",
                                                "outlined": "MuiInputLabel-outlined-70",
                                                "required": "MuiInputLabel-required-64",
                                                "root": "MuiInputLabel-root-60",
                                                "shrink": "MuiInputLabel-shrink-67",
                                              }
                                            }
                                            disableAnimation={false}
                                            htmlFor="message-input"
                                            muiFormControl={
                                              Object {
                                                "adornedStart": false,
                                                "disabled": false,
                                                "error": false,
                                                "filled": false,
                                                "focused": false,
                                                "margin": "normal",
                                                "onBlur": [Function],
                                                "onEmpty": [Function],
                                                "onFilled": [Function],
                                                "onFocus": [Function],
                                                "required": false,
                                                "variant": "standard",
                                              }
                                            }
                                          >
                                            <WithStyles(WithFormControlContext(FormLabel))
                                              className="MuiInputLabel-root-60 MuiInputLabel-formControl-65 MuiInputLabel-animated-68"
                                              classes={
                                                Object {
                                                  "disabled": "MuiInputLabel-disabled-62",
                                                  "error": "MuiInputLabel-error-63",
                                                  "focused": "MuiInputLabel-focused-61",
                                                  "required": "MuiInputLabel-required-64",
                                                }
                                              }
                                              data-shrink={false}
                                              htmlFor="message-input"
                                            >
                                              <WithFormControlContext(FormLabel)
                                                className="MuiInputLabel-root-60 MuiInputLabel-formControl-65 MuiInputLabel-animated-68"
                                                classes={
                                                  Object {
                                                    "asterisk": "MuiFormLabel-asterisk-77",
                                                    "disabled": "MuiFormLabel-disabled-73 MuiInputLabel-disabled-62",
                                                    "error": "MuiFormLabel-error-74 MuiInputLabel-error-63",
                                                    "filled": "MuiFormLabel-filled-75",
                                                    "focused": "MuiFormLabel-focused-72 MuiInputLabel-focused-61",
                                                    "required": "MuiFormLabel-required-76 MuiInputLabel-required-64",
                                                    "root": "MuiFormLabel-root-71",
                                                  }
                                                }
                                                data-shrink={false}
                                                htmlFor="message-input"
                                              >
                                                <FormLabel
                                                  className="MuiInputLabel-root-60 MuiInputLabel-formControl-65 MuiInputLabel-animated-68"
                                                  classes={
                                                    Object {
                                                      "asterisk": "MuiFormLabel-asterisk-77",
                                                      "disabled": "MuiFormLabel-disabled-73 MuiInputLabel-disabled-62",
                                                      "error": "MuiFormLabel-error-74 MuiInputLabel-error-63",
                                                      "filled": "MuiFormLabel-filled-75",
                                                      "focused": "MuiFormLabel-focused-72 MuiInputLabel-focused-61",
                                                      "required": "MuiFormLabel-required-76 MuiInputLabel-required-64",
                                                      "root": "MuiFormLabel-root-71",
                                                    }
                                                  }
                                                  component="label"
                                                  data-shrink={false}
                                                  htmlFor="message-input"
                                                  muiFormControl={
                                                    Object {
                                                      "adornedStart": false,
                                                      "disabled": false,
                                                      "error": false,
                                                      "filled": false,
                                                      "focused": false,
                                                      "margin": "normal",
                                                      "onBlur": [Function],
                                                      "onEmpty": [Function],
                                                      "onFilled": [Function],
                                                      "onFocus": [Function],
                                                      "required": false,
                                                      "variant": "standard",
                                                    }
                                                  }
                                                >
                                                  <label
                                                    className="MuiFormLabel-root-71 MuiInputLabel-root-60 MuiInputLabel-formControl-65 MuiInputLabel-animated-68"
                                                    data-shrink={false}
                                                    htmlFor="message-input"
                                                  >
                                                    Message
                                                  </label>
                                                </FormLabel>
                                              </WithFormControlContext(FormLabel)>
                                            </WithStyles(WithFormControlContext(FormLabel))>
                                          </InputLabel>
                                        </WithFormControlContext(InputLabel)>
                                      </WithStyles(WithFormControlContext(InputLabel))>
                                      <WithStyles(Input)
                                        autoFocus={true}
                                        id="message-input"
                                        name="message-input"
                                        onChange={[Function]}
                                        value=""
                                      >
                                        <Input
                                          autoFocus={true}
                                          classes={
                                            Object {
                                              "disabled": "MuiInput-disabled-81",
                                              "error": "MuiInput-error-83",
                                              "focused": "MuiInput-focused-80",
                                              "formControl": "MuiInput-formControl-79",
                                              "fullWidth": "MuiInput-fullWidth-85",
                                              "input": "MuiInput-input-86",
                                              "inputMarginDense": "MuiInput-inputMarginDense-87",
                                              "inputMultiline": "MuiInput-inputMultiline-88",
                                              "inputType": "MuiInput-inputType-89",
                                              "inputTypeSearch": "MuiInput-inputTypeSearch-90",
                                              "multiline": "MuiInput-multiline-84",
                                              "root": "MuiInput-root-78",
                                              "underline": "MuiInput-underline-82",
                                            }
                                          }
                                          id="message-input"
                                          name="message-input"
                                          onChange={[Function]}
                                          value=""
                                        >
                                          <WithStyles(WithFormControlContext(InputBase))
                                            autoFocus={true}
                                            classes={
                                              Object {
                                                "disabled": "MuiInput-disabled-81",
                                                "error": "MuiInput-error-83",
                                                "focused": "MuiInput-focused-80",
                                                "formControl": "MuiInput-formControl-79",
                                                "fullWidth": "MuiInput-fullWidth-85",
                                                "input": "MuiInput-input-86",
                                                "inputMarginDense": "MuiInput-inputMarginDense-87",
                                                "inputMultiline": "MuiInput-inputMultiline-88",
                                                "inputType": "MuiInput-inputType-89",
                                                "inputTypeSearch": "MuiInput-inputTypeSearch-90",
                                                "multiline": "MuiInput-multiline-84",
                                                "root": "MuiInput-root-78 MuiInput-underline-82",
                                                "underline": null,
                                              }
                                            }
                                            fullWidth={false}
                                            id="message-input"
                                            inputComponent="input"
                                            multiline={false}
                                            name="message-input"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <WithFormControlContext(InputBase)
                                              autoFocus={true}
                                              classes={
                                                Object {
                                                  "adornedEnd": "MuiInputBase-adornedEnd-96",
                                                  "adornedStart": "MuiInputBase-adornedStart-95",
                                                  "disabled": "MuiInputBase-disabled-94 MuiInput-disabled-81",
                                                  "error": "MuiInputBase-error-97 MuiInput-error-83",
                                                  "focused": "MuiInputBase-focused-93 MuiInput-focused-80",
                                                  "formControl": "MuiInputBase-formControl-92 MuiInput-formControl-79",
                                                  "fullWidth": "MuiInputBase-fullWidth-100 MuiInput-fullWidth-85",
                                                  "input": "MuiInputBase-input-101 MuiInput-input-86",
                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-107",
                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart-106",
                                                  "inputMarginDense": "MuiInputBase-inputMarginDense-102 MuiInput-inputMarginDense-87",
                                                  "inputMultiline": "MuiInputBase-inputMultiline-103 MuiInput-inputMultiline-88",
                                                  "inputType": "MuiInputBase-inputType-104 MuiInput-inputType-89",
                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch-105 MuiInput-inputTypeSearch-90",
                                                  "marginDense": "MuiInputBase-marginDense-98",
                                                  "multiline": "MuiInputBase-multiline-99 MuiInput-multiline-84",
                                                  "root": "MuiInputBase-root-91 MuiInput-root-78 MuiInput-underline-82",
                                                }
                                              }
                                              fullWidth={false}
                                              id="message-input"
                                              inputComponent="input"
                                              multiline={false}
                                              name="message-input"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            >
                                              <InputBase
                                                autoFocus={true}
                                                classes={
                                                  Object {
                                                    "adornedEnd": "MuiInputBase-adornedEnd-96",
                                                    "adornedStart": "MuiInputBase-adornedStart-95",
                                                    "disabled": "MuiInputBase-disabled-94 MuiInput-disabled-81",
                                                    "error": "MuiInputBase-error-97 MuiInput-error-83",
                                                    "focused": "MuiInputBase-focused-93 MuiInput-focused-80",
                                                    "formControl": "MuiInputBase-formControl-92 MuiInput-formControl-79",
                                                    "fullWidth": "MuiInputBase-fullWidth-100 MuiInput-fullWidth-85",
                                                    "input": "MuiInputBase-input-101 MuiInput-input-86",
                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-107",
                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart-106",
                                                    "inputMarginDense": "MuiInputBase-inputMarginDense-102 MuiInput-inputMarginDense-87",
                                                    "inputMultiline": "MuiInputBase-inputMultiline-103 MuiInput-inputMultiline-88",
                                                    "inputType": "MuiInputBase-inputType-104 MuiInput-inputType-89",
                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch-105 MuiInput-inputTypeSearch-90",
                                                    "marginDense": "MuiInputBase-marginDense-98",
                                                    "multiline": "MuiInputBase-multiline-99 MuiInput-multiline-84",
                                                    "root": "MuiInputBase-root-91 MuiInput-root-78 MuiInput-underline-82",
                                                  }
                                                }
                                                fullWidth={false}
                                                id="message-input"
                                                inputComponent="input"
                                                muiFormControl={
                                                  Object {
                                                    "adornedStart": false,
                                                    "disabled": false,
                                                    "error": false,
                                                    "filled": false,
                                                    "focused": false,
                                                    "margin": "normal",
                                                    "onBlur": [Function],
                                                    "onEmpty": [Function],
                                                    "onFilled": [Function],
                                                    "onFocus": [Function],
                                                    "required": false,
                                                    "variant": "standard",
                                                  }
                                                }
                                                multiline={false}
                                                name="message-input"
                                                onChange={[Function]}
                                                type="text"
                                                value=""
                                              >
                                                <div
                                                  className="MuiInputBase-root-91 MuiInput-root-78 MuiInput-underline-82 MuiInputBase-formControl-92 MuiInput-formControl-79"
                                                  onClick={[Function]}
                                                >
                                                  <input
                                                    aria-invalid={false}
                                                    autoFocus={true}
                                                    className="MuiInputBase-input-101 MuiInput-input-86"
                                                    disabled={false}
                                                    id="message-input"
                                                    name="message-input"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    required={false}
                                                    type="text"
                                                    value=""
                                                  />
                                                </div>
                                              </InputBase>
                                            </WithFormControlContext(InputBase)>
                                          </WithStyles(WithFormControlContext(InputBase))>
                                        </Input>
                                      </WithStyles(Input)>
                                    </div>
                                  </FormControl>
                                </WithStyles(FormControl)>
                              </TextField>
                            </StyledComponent>
                          </Styled(TextField)>
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </div>
                </StyledComponent>
              </styled.div>
            </div>
          </StyledComponent>
        </styled.div>
      </Chat>
    </Connect(Chat)>
  </WithStyles(Connect(Chat))>
</Provider>
`;

exports[`Chat should render connected component with writing notifications 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <WithStyles(Connect(Chat))>
    <Connect(Chat)
      classes={
        Object {
          "progress": "Connect-Chat--progress-1",
        }
      }
    >
      <Chat
        classes={
          Object {
            "progress": "Connect-Chat--progress-1",
          }
        }
        isInitiator={true}
        messages={Array []}
        notifications={
          Array [
            Object {
              "date": 2019-02-04T23:55:17.782Z,
              "user": Object {
                "avatar": "rock",
                "id": 86,
                "name": "David Gilmour",
              },
            },
          ]
        }
        sendClearWritingNotification={[Function]}
        sendMessage={[Function]}
        sendWritingNotification={[Function]}
        user={
          Object {
            "avatar": "metal",
            "id": 42,
            "name": "Dude",
          }
        }
      >
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-dnqmqq",
                  "isStatic": true,
                  "lastClassName": "ieAKfK",
                  "rules": Array [
                    "
  max-width: 640px;
  width: 100%;
  position: absolute;
  height: calc(100% - 20px);
  top: 0;

  @media (max-width: 800px) {
    max-width: 100%;
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-dnqmqq",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-dnqmqq ieAKfK"
            >
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-iwsKbI",
                        "isStatic": true,
                        "lastClassName": "kzxSCd",
                        "rules": Array [
                          "
  display: flex;
  flex-direction: column;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  padding: 20px 20px 0 20px;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-iwsKbI",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-iwsKbI kzxSCd"
                  >
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-gqjmRU",
                              "isStatic": true,
                              "lastClassName": "cUiTuu",
                              "rules": Array [
                                "
  flex: 1;
  overflow: scroll;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-gqjmRU",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-gqjmRU cUiTuu"
                        >
                          <Notification
                            actionButton={
                              <ClipboardButton
                                component="a"
                                onClick={[Function]}
                              >
                                <ForwardRef
                                  id="share-link"
                                >
                                  <WithStyles(Icon)
                                    style={
                                      Object {
                                        "fontSize": "16px",
                                      }
                                    }
                                  >
                                    insert_link
                                  </WithStyles(Icon)>
                                </ForwardRef>
                              </ClipboardButton>
                            }
                            date={2019-02-04T23:55:17.782Z}
                            text="Dude created chat."
                          >
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-ifAKCX",
                                      "isStatic": true,
                                      "lastClassName": "hkAyvq",
                                      "rules": Array [
                                        "
  display: flex;
  margin-bottom: 5px;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-ifAKCX",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="sc-ifAKCX hkAyvq"
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-EHOje",
                                            "isStatic": true,
                                            "lastClassName": "hsXxjJ",
                                            "rules": Array [
                                              "
  width: 50%;
  display: flex;
  width: 100%;
  margin: 0 10px;
  justify-content: center;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-EHOje",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-EHOje hsXxjJ"
                                      >
                                        <styled.div>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-gzVnrw",
                                                  "isStatic": true,
                                                  "lastClassName": "gDmTXO",
                                                  "rules": Array [
                                                    "
  width: 50%;
  background: ",
                                                    "rgba(255, 255, 255, 0.5)",
                                                    ";
  padding: 20px 10px 5px 10px;
  border-radius: 2px;
  min-width: 220px;
  position: relative;
  display: flex;
  justify-content: space-between;

  > p {
    color: #222;
    font-size: 0.85rem;
    font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;
    font-weight: 400;
    margin: 0;
  }

  :before {
    content: '';
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 12px 0 12px 15px;
    border-color: transparent transparent transparent ",
                                                    "rgba(255, 255, 255, 0.5)",
                                                    ";
    position: absolute;
    top: 0;
    right: -15px;
    bottom: 0;
    margin: auto;
  }

  :after {
    content: '';
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 12px 15px 12px 0;
    border-color: transparent ",
                                                    "rgba(255, 255, 255, 0.5)",
                                                    " transparent transparent;
    position: absolute;
    top: 0;
    left: -15px;
    bottom: 0;
    margin: auto;
  }
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-gzVnrw",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="sc-gzVnrw gDmTXO"
                                            >
                                              <styled.div>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-bZQynM",
                                                        "isStatic": true,
                                                        "lastClassName": "gNQKpL",
                                                        "rules": Array [
                                                          "
  position: absolute;
  top: 5px;
  left: 10px;

  p {
    color: #444;
    font-size: 0.75rem;
    font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;
    font-weight: 400;
    letter-spacing: 0.03333em;
    margin: 0;
  }
",
                                                        ],
                                                      },
                                                      "displayName": "styled.div",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-bZQynM",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <div
                                                    className="sc-bZQynM gNQKpL"
                                                  >
                                                    <p>
                                                      February 5th 2019, 12:24:29 pm
                                                    </p>
                                                  </div>
                                                </StyledComponent>
                                              </styled.div>
                                              <p>
                                                Dude created chat.
                                              </p>
                                              <styled.div>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-htoDjs",
                                                        "isStatic": true,
                                                        "lastClassName": "dCWZkl",
                                                        "rules": Array [
                                                          "
  position: absolute;
  top: 2px;
  right: 0px;
",
                                                        ],
                                                      },
                                                      "displayName": "styled.div",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-htoDjs",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <div
                                                    className="sc-htoDjs dCWZkl"
                                                  >
                                                    <ClipboardButton
                                                      component="a"
                                                      onClick={[Function]}
                                                    >
                                                      <a
                                                        className=""
                                                        onClick={[Function]}
                                                        style={Object {}}
                                                      >
                                                        <Styled(WithStyles(IconButton))
                                                          id="share-link"
                                                        >
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "Naked": [Function],
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-jTzLTM",
                                                                  "isStatic": true,
                                                                  "lastClassName": "kokRiH",
                                                                  "rules": Array [
                                                                    "
  position: absolute;
  top: -1px;
  right: 10px;
",
                                                                  ],
                                                                },
                                                                "displayName": "Styled(WithStyles(IconButton))",
                                                                "foldedComponentIds": Array [],
                                                                "options": Object {
                                                                  "defaultTheme": Object {
                                                                    "breakpoints": Object {
                                                                      "between": [Function],
                                                                      "down": [Function],
                                                                      "keys": Array [
                                                                        "xs",
                                                                        "sm",
                                                                        "md",
                                                                        "lg",
                                                                        "xl",
                                                                      ],
                                                                      "only": [Function],
                                                                      "up": [Function],
                                                                      "values": Object {
                                                                        "lg": 1280,
                                                                        "md": 960,
                                                                        "sm": 600,
                                                                        "xl": 1920,
                                                                        "xs": 0,
                                                                      },
                                                                      "width": [Function],
                                                                    },
                                                                    "direction": "ltr",
                                                                    "mixins": Object {
                                                                      "gutters": [Function],
                                                                      "toolbar": Object {
                                                                        "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                          "minHeight": 48,
                                                                        },
                                                                        "@media (min-width:600px)": Object {
                                                                          "minHeight": 64,
                                                                        },
                                                                        "minHeight": 56,
                                                                      },
                                                                    },
                                                                    "overrides": Object {},
                                                                    "palette": Object {
                                                                      "action": Object {
                                                                        "active": "rgba(0, 0, 0, 0.54)",
                                                                        "disabled": "rgba(0, 0, 0, 0.26)",
                                                                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                        "hover": "rgba(0, 0, 0, 0.08)",
                                                                        "hoverOpacity": 0.08,
                                                                        "selected": "rgba(0, 0, 0, 0.14)",
                                                                      },
                                                                      "augmentColor": [Function],
                                                                      "background": Object {
                                                                        "default": "#fafafa",
                                                                        "paper": "#fff",
                                                                      },
                                                                      "common": Object {
                                                                        "black": "#000",
                                                                        "white": "#fff",
                                                                      },
                                                                      "contrastThreshold": 3,
                                                                      "divider": "rgba(0, 0, 0, 0.12)",
                                                                      "error": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#d32f2f",
                                                                        "light": "#e57373",
                                                                        "main": "#f44336",
                                                                      },
                                                                      "getContrastText": [Function],
                                                                      "grey": Object {
                                                                        "100": "#f5f5f5",
                                                                        "200": "#eeeeee",
                                                                        "300": "#e0e0e0",
                                                                        "400": "#bdbdbd",
                                                                        "50": "#fafafa",
                                                                        "500": "#9e9e9e",
                                                                        "600": "#757575",
                                                                        "700": "#616161",
                                                                        "800": "#424242",
                                                                        "900": "#212121",
                                                                        "A100": "#d5d5d5",
                                                                        "A200": "#aaaaaa",
                                                                        "A400": "#303030",
                                                                        "A700": "#616161",
                                                                      },
                                                                      "primary": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#303f9f",
                                                                        "light": "#7986cb",
                                                                        "main": "#3f51b5",
                                                                      },
                                                                      "secondary": Object {
                                                                        "contrastText": "#fff",
                                                                        "dark": "#c51162",
                                                                        "light": "#ff4081",
                                                                        "main": "#f50057",
                                                                      },
                                                                      "text": Object {
                                                                        "disabled": "rgba(0, 0, 0, 0.38)",
                                                                        "hint": "rgba(0, 0, 0, 0.38)",
                                                                        "primary": "rgba(0, 0, 0, 0.87)",
                                                                        "secondary": "rgba(0, 0, 0, 0.54)",
                                                                      },
                                                                      "tonalOffset": 0.2,
                                                                      "type": "light",
                                                                    },
                                                                    "props": Object {},
                                                                    "shadows": Array [
                                                                      "none",
                                                                      "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                                                      "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                                                      "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                                                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                    ],
                                                                    "shape": Object {
                                                                      "borderRadius": 4,
                                                                    },
                                                                    "spacing": Object {
                                                                      "unit": 8,
                                                                    },
                                                                    "transitions": Object {
                                                                      "create": [Function],
                                                                      "duration": Object {
                                                                        "complex": 375,
                                                                        "enteringScreen": 225,
                                                                        "leavingScreen": 195,
                                                                        "short": 250,
                                                                        "shorter": 200,
                                                                        "shortest": 150,
                                                                        "standard": 300,
                                                                      },
                                                                      "easing": Object {
                                                                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                      },
                                                                      "getAutoHeightDuration": [Function],
                                                                    },
                                                                    "typography": Object {
                                                                      "body1": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.46429em",
                                                                      },
                                                                      "body1Next": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.00938em",
                                                                        "lineHeight": 1.5,
                                                                      },
                                                                      "body2": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 500,
                                                                        "lineHeight": "1.71429em",
                                                                      },
                                                                      "body2Next": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.01071em",
                                                                        "lineHeight": 1.5,
                                                                      },
                                                                      "button": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 500,
                                                                        "textTransform": "uppercase",
                                                                      },
                                                                      "buttonNext": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 500,
                                                                        "letterSpacing": "0.02857em",
                                                                        "lineHeight": 1.75,
                                                                        "textTransform": "uppercase",
                                                                      },
                                                                      "caption": Object {
                                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.75rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.375em",
                                                                      },
                                                                      "captionNext": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.75rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.03333em",
                                                                        "lineHeight": 1.66,
                                                                      },
                                                                      "display1": Object {
                                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "2.125rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.20588em",
                                                                      },
                                                                      "display2": Object {
                                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "2.8125rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.13333em",
                                                                        "marginLeft": "-.02em",
                                                                      },
                                                                      "display3": Object {
                                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "3.5rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "-.02em",
                                                                        "lineHeight": "1.30357em",
                                                                        "marginLeft": "-.02em",
                                                                      },
                                                                      "display4": Object {
                                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "7rem",
                                                                        "fontWeight": 300,
                                                                        "letterSpacing": "-.04em",
                                                                        "lineHeight": "1.14286em",
                                                                        "marginLeft": "-.04em",
                                                                      },
                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                      "fontSize": 14,
                                                                      "fontWeightLight": 300,
                                                                      "fontWeightMedium": 500,
                                                                      "fontWeightRegular": 400,
                                                                      "h1": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "6rem",
                                                                        "fontWeight": 300,
                                                                        "letterSpacing": "-0.01562em",
                                                                        "lineHeight": 1,
                                                                      },
                                                                      "h2": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "3.75rem",
                                                                        "fontWeight": 300,
                                                                        "letterSpacing": "-0.00833em",
                                                                        "lineHeight": 1,
                                                                      },
                                                                      "h3": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "3rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0em",
                                                                        "lineHeight": 1.04,
                                                                      },
                                                                      "h4": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "2.125rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.00735em",
                                                                        "lineHeight": 1.17,
                                                                      },
                                                                      "h5": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1.5rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0em",
                                                                        "lineHeight": 1.33,
                                                                      },
                                                                      "h6": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1.25rem",
                                                                        "fontWeight": 500,
                                                                        "letterSpacing": "0.0075em",
                                                                        "lineHeight": 1.6,
                                                                      },
                                                                      "headline": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1.5rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.35417em",
                                                                      },
                                                                      "overline": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.75rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.08333em",
                                                                        "lineHeight": 2.66,
                                                                        "textTransform": "uppercase",
                                                                      },
                                                                      "pxToRem": [Function],
                                                                      "round": [Function],
                                                                      "subheading": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.5em",
                                                                      },
                                                                      "subtitle1": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "0.00938em",
                                                                        "lineHeight": 1.75,
                                                                      },
                                                                      "subtitle2": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 500,
                                                                        "letterSpacing": "0.00714em",
                                                                        "lineHeight": 1.57,
                                                                      },
                                                                      "title": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1.3125rem",
                                                                        "fontWeight": 500,
                                                                        "lineHeight": "1.16667em",
                                                                      },
                                                                      "useNextVariants": false,
                                                                    },
                                                                    "zIndex": Object {
                                                                      "appBar": 1100,
                                                                      "drawer": 1200,
                                                                      "mobileStepper": 1000,
                                                                      "modal": 1300,
                                                                      "snackbar": 1400,
                                                                      "tooltip": 1500,
                                                                    },
                                                                  },
                                                                  "name": "MuiIconButton",
                                                                },
                                                                "render": [Function],
                                                                "styledComponentId": "sc-jTzLTM",
                                                                "target": [Function],
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                                Symbol(Symbol.hasInstance): [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            id="share-link"
                                                          >
                                                            <WithStyles(IconButton)
                                                              className="sc-jTzLTM kokRiH"
                                                              id="share-link"
                                                            >
                                                              <IconButton
                                                                className="sc-jTzLTM kokRiH"
                                                                classes={
                                                                  Object {
                                                                    "colorInherit": "MuiIconButton-colorInherit-3",
                                                                    "colorPrimary": "MuiIconButton-colorPrimary-4",
                                                                    "colorSecondary": "MuiIconButton-colorSecondary-5",
                                                                    "disabled": "MuiIconButton-disabled-6",
                                                                    "label": "MuiIconButton-label-7",
                                                                    "root": "MuiIconButton-root-2",
                                                                  }
                                                                }
                                                                color="default"
                                                                disabled={false}
                                                                id="share-link"
                                                              >
                                                                <WithStyles(ButtonBase)
                                                                  centerRipple={true}
                                                                  className="MuiIconButton-root-2 sc-jTzLTM kokRiH"
                                                                  disabled={false}
                                                                  focusRipple={true}
                                                                  id="share-link"
                                                                >
                                                                  <ButtonBase
                                                                    centerRipple={true}
                                                                    className="MuiIconButton-root-2 sc-jTzLTM kokRiH"
                                                                    classes={
                                                                      Object {
                                                                        "disabled": "MuiButtonBase-disabled-9",
                                                                        "focusVisible": "MuiButtonBase-focusVisible-10",
                                                                        "root": "MuiButtonBase-root-8",
                                                                      }
                                                                    }
                                                                    component="button"
                                                                    disableRipple={false}
                                                                    disableTouchRipple={false}
                                                                    disabled={false}
                                                                    focusRipple={true}
                                                                    id="share-link"
                                                                    tabIndex="0"
                                                                    type="button"
                                                                  >
                                                                    <button
                                                                      className="MuiButtonBase-root-8 MuiIconButton-root-2 sc-jTzLTM kokRiH"
                                                                      disabled={false}
                                                                      id="share-link"
                                                                      onBlur={[Function]}
                                                                      onContextMenu={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onKeyUp={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      onMouseUp={[Function]}
                                                                      onTouchEnd={[Function]}
                                                                      onTouchMove={[Function]}
                                                                      onTouchStart={[Function]}
                                                                      tabIndex="0"
                                                                      type="button"
                                                                    >
                                                                      <span
                                                                        className="MuiIconButton-label-7"
                                                                      >
                                                                        <WithStyles(Icon)
                                                                          style={
                                                                            Object {
                                                                              "fontSize": "16px",
                                                                            }
                                                                          }
                                                                        >
                                                                          <Icon
                                                                            classes={
                                                                              Object {
                                                                                "colorAction": "MuiIcon-colorAction-14",
                                                                                "colorDisabled": "MuiIcon-colorDisabled-16",
                                                                                "colorError": "MuiIcon-colorError-15",
                                                                                "colorPrimary": "MuiIcon-colorPrimary-12",
                                                                                "colorSecondary": "MuiIcon-colorSecondary-13",
                                                                                "fontSizeInherit": "MuiIcon-fontSizeInherit-17",
                                                                                "fontSizeLarge": "MuiIcon-fontSizeLarge-19",
                                                                                "fontSizeSmall": "MuiIcon-fontSizeSmall-18",
                                                                                "root": "MuiIcon-root-11",
                                                                              }
                                                                            }
                                                                            color="inherit"
                                                                            component="span"
                                                                            fontSize="default"
                                                                            style={
                                                                              Object {
                                                                                "fontSize": "16px",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              aria-hidden="true"
                                                                              className="material-icons MuiIcon-root-11"
                                                                              style={
                                                                                Object {
                                                                                  "fontSize": "16px",
                                                                                }
                                                                              }
                                                                            >
                                                                              insert_link
                                                                            </span>
                                                                          </Icon>
                                                                        </WithStyles(Icon)>
                                                                      </span>
                                                                      <NoSsr
                                                                        defer={false}
                                                                        fallback={null}
                                                                      >
                                                                        <WithStyles(TouchRipple)
                                                                          center={true}
                                                                          innerRef={[Function]}
                                                                        >
                                                                          <TouchRipple
                                                                            center={true}
                                                                            classes={
                                                                              Object {
                                                                                "child": "MuiTouchRipple-child-112",
                                                                                "childLeaving": "MuiTouchRipple-childLeaving-113",
                                                                                "childPulsate": "MuiTouchRipple-childPulsate-114",
                                                                                "ripple": "MuiTouchRipple-ripple-109",
                                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate-111",
                                                                                "rippleVisible": "MuiTouchRipple-rippleVisible-110",
                                                                                "root": "MuiTouchRipple-root-108",
                                                                              }
                                                                            }
                                                                          >
                                                                            <TransitionGroup
                                                                              childFactory={[Function]}
                                                                              className="MuiTouchRipple-root-108"
                                                                              component="span"
                                                                              enter={true}
                                                                              exit={true}
                                                                            >
                                                                              <span
                                                                                className="MuiTouchRipple-root-108"
                                                                              />
                                                                            </TransitionGroup>
                                                                          </TouchRipple>
                                                                        </WithStyles(TouchRipple)>
                                                                      </NoSsr>
                                                                    </button>
                                                                  </ButtonBase>
                                                                </WithStyles(ButtonBase)>
                                                              </IconButton>
                                                            </WithStyles(IconButton)>
                                                          </StyledComponent>
                                                        </Styled(WithStyles(IconButton))>
                                                      </a>
                                                    </ClipboardButton>
                                                  </div>
                                                </StyledComponent>
                                              </styled.div>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </Notification>
                          <Message
                            date={2019-02-04T23:55:17.782Z}
                            key="86"
                            text={<WithStyles(LinearProgress) />}
                            type="peer"
                            user={
                              Object {
                                "avatar": "rock",
                                "id": 86,
                                "name": "David Gilmour",
                              }
                            }
                          >
                            <styled.div
                              type="peer"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": false,
                                      "lastClassName": "llljKx",
                                      "rules": Array [
                                        "
  display: flex;
  flex-direction: row-reverse;
  margin-bottom: 5px;

  ",
                                        [Function],
                                        "
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                type="peer"
                              >
                                <div
                                  className="sc-bdVaJa llljKx"
                                  type="peer"
                                >
                                  <Avatar
                                    avatar="rock"
                                  >
                                    <WithStyles(Icon)
                                      style={
                                        Object {
                                          "fontSize": "50px",
                                        }
                                      }
                                    >
                                      <Icon
                                        classes={
                                          Object {
                                            "colorAction": "MuiIcon-colorAction-14",
                                            "colorDisabled": "MuiIcon-colorDisabled-16",
                                            "colorError": "MuiIcon-colorError-15",
                                            "colorPrimary": "MuiIcon-colorPrimary-12",
                                            "colorSecondary": "MuiIcon-colorSecondary-13",
                                            "fontSizeInherit": "MuiIcon-fontSizeInherit-17",
                                            "fontSizeLarge": "MuiIcon-fontSizeLarge-19",
                                            "fontSizeSmall": "MuiIcon-fontSizeSmall-18",
                                            "root": "MuiIcon-root-11",
                                          }
                                        }
                                        color="inherit"
                                        component="span"
                                        fontSize="default"
                                        style={
                                          Object {
                                            "fontSize": "50px",
                                          }
                                        }
                                      >
                                        <span
                                          aria-hidden="true"
                                          className="material-icons MuiIcon-root-11"
                                          style={
                                            Object {
                                              "fontSize": "50px",
                                            }
                                          }
                                        >
                                          rock
                                        </span>
                                      </Icon>
                                    </WithStyles(Icon)>
                                  </Avatar>
                                  <styled.div
                                    type="peer"
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-bwzfXH",
                                            "isStatic": false,
                                            "lastClassName": "kvCxrc",
                                            "rules": Array [
                                              "
  width: 50%;
  display: flex;
  width: 100%;
  margin: 0 10px;
  justify-content: flex-end;

  ",
                                              [Function],
                                              "
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-bwzfXH",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      type="peer"
                                    >
                                      <div
                                        className="sc-bwzfXH kvCxrc"
                                        type="peer"
                                      >
                                        <styled.div
                                          type="peer"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-bxivhb",
                                                  "isStatic": false,
                                                  "lastClassName": "gqaAOW",
                                                  "rules": Array [
                                                    "
  width: 50%;
  background: ",
                                                    "rgba(150, 150, 150, 0.2)",
                                                    ";
  color: #eee;
  padding: 20px 10px 5px 10px;
  border-radius: 5px;
  min-width: 220px;
  position: relative;
  word-break: break-word;

  > p {
    word-break: break-word;
  }

  :before {
    content: '';
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 5px 0 5px 7px;
    border-color: transparent transparent transparent
      ",
                                                    "rgba(150, 150, 150, 0.2)",
                                                    ";
    position: absolute;
    top: 9px;
    right: -7px;

    ",
                                                    [Function],
                                                    "
  }

  ",
                                                    [Function],
                                                    "
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-bxivhb",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            type="peer"
                                          >
                                            <div
                                              className="sc-bxivhb gqaAOW"
                                              type="peer"
                                            >
                                              <styled.div>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-htpNat",
                                                        "isStatic": true,
                                                        "lastClassName": "dUjCyT",
                                                        "rules": Array [
                                                          "
  position: absolute;
  top: 5px;
  left: 10px;

  p {
    color: #aaa;
    font-size: 0.75rem;
    font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;
    font-weight: 400;
    letter-spacing: 0.03333em;
    margin: 0;
  }
",
                                                        ],
                                                      },
                                                      "displayName": "styled.div",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-htpNat",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <div
                                                    className="sc-htpNat dUjCyT"
                                                  >
                                                    <p>
                                                      February 5th 2019, 12:24:29 pm
                                                    </p>
                                                  </div>
                                                </StyledComponent>
                                              </styled.div>
                                              <WithStyles(Typography)>
                                                <Typography
                                                  align="inherit"
                                                  classes={
                                                    Object {
                                                      "alignCenter": "MuiTypography-alignCenter-43",
                                                      "alignJustify": "MuiTypography-alignJustify-45",
                                                      "alignLeft": "MuiTypography-alignLeft-42",
                                                      "alignRight": "MuiTypography-alignRight-44",
                                                      "body1": "MuiTypography-body1-29",
                                                      "body2": "MuiTypography-body2-28",
                                                      "button": "MuiTypography-button-31",
                                                      "caption": "MuiTypography-caption-30",
                                                      "colorError": "MuiTypography-colorError-54",
                                                      "colorInherit": "MuiTypography-colorInherit-49",
                                                      "colorPrimary": "MuiTypography-colorPrimary-50",
                                                      "colorSecondary": "MuiTypography-colorSecondary-51",
                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary-52",
                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary-53",
                                                      "display1": "MuiTypography-display1-24",
                                                      "display2": "MuiTypography-display2-23",
                                                      "display3": "MuiTypography-display3-22",
                                                      "display4": "MuiTypography-display4-21",
                                                      "gutterBottom": "MuiTypography-gutterBottom-47",
                                                      "h1": "MuiTypography-h1-32",
                                                      "h2": "MuiTypography-h2-33",
                                                      "h3": "MuiTypography-h3-34",
                                                      "h4": "MuiTypography-h4-35",
                                                      "h5": "MuiTypography-h5-36",
                                                      "h6": "MuiTypography-h6-37",
                                                      "headline": "MuiTypography-headline-25",
                                                      "inline": "MuiTypography-inline-55",
                                                      "noWrap": "MuiTypography-noWrap-46",
                                                      "overline": "MuiTypography-overline-40",
                                                      "paragraph": "MuiTypography-paragraph-48",
                                                      "root": "MuiTypography-root-20",
                                                      "srOnly": "MuiTypography-srOnly-41",
                                                      "subheading": "MuiTypography-subheading-27",
                                                      "subtitle1": "MuiTypography-subtitle1-38",
                                                      "subtitle2": "MuiTypography-subtitle2-39",
                                                      "title": "MuiTypography-title-26",
                                                    }
                                                  }
                                                  color="default"
                                                  gutterBottom={false}
                                                  headlineMapping={
                                                    Object {
                                                      "body1": "p",
                                                      "body2": "p",
                                                      "display1": "h1",
                                                      "display2": "h1",
                                                      "display3": "h1",
                                                      "display4": "h1",
                                                      "h1": "h1",
                                                      "h2": "h2",
                                                      "h3": "h3",
                                                      "h4": "h4",
                                                      "h5": "h5",
                                                      "h6": "h6",
                                                      "headline": "h1",
                                                      "subheading": "h3",
                                                      "subtitle1": "h6",
                                                      "subtitle2": "h6",
                                                      "title": "h2",
                                                    }
                                                  }
                                                  inline={false}
                                                  noWrap={false}
                                                  paragraph={false}
                                                  theme={
                                                    Object {
                                                      "breakpoints": Object {
                                                        "between": [Function],
                                                        "down": [Function],
                                                        "keys": Array [
                                                          "xs",
                                                          "sm",
                                                          "md",
                                                          "lg",
                                                          "xl",
                                                        ],
                                                        "only": [Function],
                                                        "up": [Function],
                                                        "values": Object {
                                                          "lg": 1280,
                                                          "md": 960,
                                                          "sm": 600,
                                                          "xl": 1920,
                                                          "xs": 0,
                                                        },
                                                        "width": [Function],
                                                      },
                                                      "direction": "ltr",
                                                      "mixins": Object {
                                                        "gutters": [Function],
                                                        "toolbar": Object {
                                                          "@media (min-width:0px) and (orientation: landscape)": Object {
                                                            "minHeight": 48,
                                                          },
                                                          "@media (min-width:600px)": Object {
                                                            "minHeight": 64,
                                                          },
                                                          "minHeight": 56,
                                                        },
                                                      },
                                                      "overrides": Object {},
                                                      "palette": Object {
                                                        "action": Object {
                                                          "active": "rgba(0, 0, 0, 0.54)",
                                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                          "hover": "rgba(0, 0, 0, 0.08)",
                                                          "hoverOpacity": 0.08,
                                                          "selected": "rgba(0, 0, 0, 0.14)",
                                                        },
                                                        "augmentColor": [Function],
                                                        "background": Object {
                                                          "default": "#fafafa",
                                                          "paper": "#fff",
                                                        },
                                                        "common": Object {
                                                          "black": "#000",
                                                          "white": "#fff",
                                                        },
                                                        "contrastThreshold": 3,
                                                        "divider": "rgba(0, 0, 0, 0.12)",
                                                        "error": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#d32f2f",
                                                          "light": "#e57373",
                                                          "main": "#f44336",
                                                        },
                                                        "getContrastText": [Function],
                                                        "grey": Object {
                                                          "100": "#f5f5f5",
                                                          "200": "#eeeeee",
                                                          "300": "#e0e0e0",
                                                          "400": "#bdbdbd",
                                                          "50": "#fafafa",
                                                          "500": "#9e9e9e",
                                                          "600": "#757575",
                                                          "700": "#616161",
                                                          "800": "#424242",
                                                          "900": "#212121",
                                                          "A100": "#d5d5d5",
                                                          "A200": "#aaaaaa",
                                                          "A400": "#303030",
                                                          "A700": "#616161",
                                                        },
                                                        "primary": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#303f9f",
                                                          "light": "#7986cb",
                                                          "main": "#3f51b5",
                                                        },
                                                        "secondary": Object {
                                                          "contrastText": "#fff",
                                                          "dark": "#c51162",
                                                          "light": "#ff4081",
                                                          "main": "#f50057",
                                                        },
                                                        "text": Object {
                                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                                          "hint": "rgba(0, 0, 0, 0.38)",
                                                          "primary": "rgba(0, 0, 0, 0.87)",
                                                          "secondary": "rgba(0, 0, 0, 0.54)",
                                                        },
                                                        "tonalOffset": 0.2,
                                                        "type": "light",
                                                      },
                                                      "props": Object {},
                                                      "shadows": Array [
                                                        "none",
                                                        "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                                        "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                                        "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                      ],
                                                      "shape": Object {
                                                        "borderRadius": 4,
                                                      },
                                                      "spacing": Object {
                                                        "unit": 8,
                                                      },
                                                      "transitions": Object {
                                                        "create": [Function],
                                                        "duration": Object {
                                                          "complex": 375,
                                                          "enteringScreen": 225,
                                                          "leavingScreen": 195,
                                                          "short": 250,
                                                          "shorter": 200,
                                                          "shortest": 150,
                                                          "standard": 300,
                                                        },
                                                        "easing": Object {
                                                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                        },
                                                        "getAutoHeightDuration": [Function],
                                                      },
                                                      "typography": Object {
                                                        "body1": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 400,
                                                          "lineHeight": "1.46429em",
                                                        },
                                                        "body1Next": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.00938em",
                                                          "lineHeight": 1.5,
                                                        },
                                                        "body2": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 500,
                                                          "lineHeight": "1.71429em",
                                                        },
                                                        "body2Next": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.01071em",
                                                          "lineHeight": 1.5,
                                                        },
                                                        "button": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 500,
                                                          "textTransform": "uppercase",
                                                        },
                                                        "buttonNext": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 500,
                                                          "letterSpacing": "0.02857em",
                                                          "lineHeight": 1.75,
                                                          "textTransform": "uppercase",
                                                        },
                                                        "caption": Object {
                                                          "color": "rgba(0, 0, 0, 0.54)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.75rem",
                                                          "fontWeight": 400,
                                                          "lineHeight": "1.375em",
                                                        },
                                                        "captionNext": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.75rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.03333em",
                                                          "lineHeight": 1.66,
                                                        },
                                                        "display1": Object {
                                                          "color": "rgba(0, 0, 0, 0.54)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "2.125rem",
                                                          "fontWeight": 400,
                                                          "lineHeight": "1.20588em",
                                                        },
                                                        "display2": Object {
                                                          "color": "rgba(0, 0, 0, 0.54)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "2.8125rem",
                                                          "fontWeight": 400,
                                                          "lineHeight": "1.13333em",
                                                          "marginLeft": "-.02em",
                                                        },
                                                        "display3": Object {
                                                          "color": "rgba(0, 0, 0, 0.54)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "3.5rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "-.02em",
                                                          "lineHeight": "1.30357em",
                                                          "marginLeft": "-.02em",
                                                        },
                                                        "display4": Object {
                                                          "color": "rgba(0, 0, 0, 0.54)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "7rem",
                                                          "fontWeight": 300,
                                                          "letterSpacing": "-.04em",
                                                          "lineHeight": "1.14286em",
                                                          "marginLeft": "-.04em",
                                                        },
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": 14,
                                                        "fontWeightLight": 300,
                                                        "fontWeightMedium": 500,
                                                        "fontWeightRegular": 400,
                                                        "h1": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "6rem",
                                                          "fontWeight": 300,
                                                          "letterSpacing": "-0.01562em",
                                                          "lineHeight": 1,
                                                        },
                                                        "h2": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "3.75rem",
                                                          "fontWeight": 300,
                                                          "letterSpacing": "-0.00833em",
                                                          "lineHeight": 1,
                                                        },
                                                        "h3": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "3rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0em",
                                                          "lineHeight": 1.04,
                                                        },
                                                        "h4": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "2.125rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.00735em",
                                                          "lineHeight": 1.17,
                                                        },
                                                        "h5": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1.5rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0em",
                                                          "lineHeight": 1.33,
                                                        },
                                                        "h6": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1.25rem",
                                                          "fontWeight": 500,
                                                          "letterSpacing": "0.0075em",
                                                          "lineHeight": 1.6,
                                                        },
                                                        "headline": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1.5rem",
                                                          "fontWeight": 400,
                                                          "lineHeight": "1.35417em",
                                                        },
                                                        "overline": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.75rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.08333em",
                                                          "lineHeight": 2.66,
                                                          "textTransform": "uppercase",
                                                        },
                                                        "pxToRem": [Function],
                                                        "round": [Function],
                                                        "subheading": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1rem",
                                                          "fontWeight": 400,
                                                          "lineHeight": "1.5em",
                                                        },
                                                        "subtitle1": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "0.00938em",
                                                          "lineHeight": 1.75,
                                                        },
                                                        "subtitle2": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 500,
                                                          "letterSpacing": "0.00714em",
                                                          "lineHeight": 1.57,
                                                        },
                                                        "title": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1.3125rem",
                                                          "fontWeight": 500,
                                                          "lineHeight": "1.16667em",
                                                        },
                                                        "useNextVariants": false,
                                                      },
                                                      "zIndex": Object {
                                                        "appBar": 1100,
                                                        "drawer": 1200,
                                                        "mobileStepper": 1000,
                                                        "modal": 1300,
                                                        "snackbar": 1400,
                                                        "tooltip": 1500,
                                                      },
                                                    }
                                                  }
                                                >
                                                  <p
                                                    className="MuiTypography-root-20 MuiTypography-body1-29"
                                                  >
                                                    <b>
                                                      David Gilmour
                                                    </b>
                                                  </p>
                                                </Typography>
                                              </WithStyles(Typography)>
                                              <span>
                                                <WithStyles(LinearProgress)>
                                                  <LinearProgress
                                                    classes={
                                                      Object {
                                                        "bar": "MuiLinearProgress-bar-125",
                                                        "bar1Buffer": "MuiLinearProgress-bar1Buffer-130",
                                                        "bar1Determinate": "MuiLinearProgress-bar1Determinate-129",
                                                        "bar1Indeterminate": "MuiLinearProgress-bar1Indeterminate-128",
                                                        "bar2Buffer": "MuiLinearProgress-bar2Buffer-132",
                                                        "bar2Indeterminate": "MuiLinearProgress-bar2Indeterminate-131",
                                                        "barColorPrimary": "MuiLinearProgress-barColorPrimary-126",
                                                        "barColorSecondary": "MuiLinearProgress-barColorSecondary-127",
                                                        "buffer": "MuiLinearProgress-buffer-120",
                                                        "colorPrimary": "MuiLinearProgress-colorPrimary-116",
                                                        "colorSecondary": "MuiLinearProgress-colorSecondary-117",
                                                        "dashed": "MuiLinearProgress-dashed-122",
                                                        "dashedColorPrimary": "MuiLinearProgress-dashedColorPrimary-123",
                                                        "dashedColorSecondary": "MuiLinearProgress-dashedColorSecondary-124",
                                                        "determinate": "MuiLinearProgress-determinate-118",
                                                        "indeterminate": "MuiLinearProgress-indeterminate-119",
                                                        "query": "MuiLinearProgress-query-121",
                                                        "root": "MuiLinearProgress-root-115",
                                                      }
                                                    }
                                                    color="primary"
                                                    variant="indeterminate"
                                                  >
                                                    <div
                                                      className="MuiLinearProgress-root-115 MuiLinearProgress-colorPrimary-116 MuiLinearProgress-indeterminate-119"
                                                      role="progressbar"
                                                    >
                                                      <div
                                                        className="MuiLinearProgress-bar-125 MuiLinearProgress-barColorPrimary-126 MuiLinearProgress-bar1Indeterminate-128"
                                                        style={Object {}}
                                                      />
                                                      <div
                                                        className="MuiLinearProgress-bar-125 MuiLinearProgress-barColorPrimary-126 MuiLinearProgress-bar2Indeterminate-131"
                                                        style={Object {}}
                                                      />
                                                    </div>
                                                  </LinearProgress>
                                                </WithStyles(LinearProgress)>
                                              </span>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </Message>
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-gZMcBi",
                              "isStatic": true,
                              "lastClassName": "iVpYKE",
                              "rules": Array [
                                "
  display: flex;
  justify-content: space-around;
  align-items: center;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-gZMcBi",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-gZMcBi iVpYKE"
                        >
                          <Styled(TextField)
                            autoFocus={true}
                            id="message-input"
                            label="Message"
                            margin="normal"
                            name="message-input"
                            onChange={[Function]}
                            onKeyPress={[Function]}
                            value=""
                          >
                            <StyledComponent
                              autoFocus={true}
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-VigVT",
                                    "isStatic": true,
                                    "lastClassName": "gtJKdb",
                                    "rules": Array [
                                      "
  flex: 1;
",
                                    ],
                                  },
                                  "displayName": "Styled(TextField)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-VigVT",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                  Symbol(Symbol.hasInstance): [Function],
                                }
                              }
                              forwardedRef={null}
                              id="message-input"
                              label="Message"
                              margin="normal"
                              name="message-input"
                              onChange={[Function]}
                              onKeyPress={[Function]}
                              value=""
                            >
                              <TextField
                                autoFocus={true}
                                className="sc-VigVT gtJKdb"
                                id="message-input"
                                label="Message"
                                margin="normal"
                                name="message-input"
                                onChange={[Function]}
                                onKeyPress={[Function]}
                                required={false}
                                select={false}
                                value=""
                                variant="standard"
                              >
                                <WithStyles(FormControl)
                                  className="sc-VigVT gtJKdb"
                                  margin="normal"
                                  onKeyPress={[Function]}
                                  required={false}
                                  variant="standard"
                                >
                                  <FormControl
                                    className="sc-VigVT gtJKdb"
                                    classes={
                                      Object {
                                        "fullWidth": "MuiFormControl-fullWidth-59",
                                        "marginDense": "MuiFormControl-marginDense-58",
                                        "marginNormal": "MuiFormControl-marginNormal-57",
                                        "root": "MuiFormControl-root-56",
                                      }
                                    }
                                    component="div"
                                    disabled={false}
                                    error={false}
                                    fullWidth={false}
                                    margin="normal"
                                    onKeyPress={[Function]}
                                    required={false}
                                    variant="standard"
                                  >
                                    <div
                                      className="MuiFormControl-root-56 MuiFormControl-marginNormal-57 sc-VigVT gtJKdb"
                                      onKeyPress={[Function]}
                                    >
                                      <WithStyles(WithFormControlContext(InputLabel))
                                        htmlFor="message-input"
                                      >
                                        <WithFormControlContext(InputLabel)
                                          classes={
                                            Object {
                                              "animated": "MuiInputLabel-animated-68",
                                              "disabled": "MuiInputLabel-disabled-62",
                                              "error": "MuiInputLabel-error-63",
                                              "filled": "MuiInputLabel-filled-69",
                                              "focused": "MuiInputLabel-focused-61",
                                              "formControl": "MuiInputLabel-formControl-65",
                                              "marginDense": "MuiInputLabel-marginDense-66",
                                              "outlined": "MuiInputLabel-outlined-70",
                                              "required": "MuiInputLabel-required-64",
                                              "root": "MuiInputLabel-root-60",
                                              "shrink": "MuiInputLabel-shrink-67",
                                            }
                                          }
                                          htmlFor="message-input"
                                        >
                                          <InputLabel
                                            classes={
                                              Object {
                                                "animated": "MuiInputLabel-animated-68",
                                                "disabled": "MuiInputLabel-disabled-62",
                                                "error": "MuiInputLabel-error-63",
                                                "filled": "MuiInputLabel-filled-69",
                                                "focused": "MuiInputLabel-focused-61",
                                                "formControl": "MuiInputLabel-formControl-65",
                                                "marginDense": "MuiInputLabel-marginDense-66",
                                                "outlined": "MuiInputLabel-outlined-70",
                                                "required": "MuiInputLabel-required-64",
                                                "root": "MuiInputLabel-root-60",
                                                "shrink": "MuiInputLabel-shrink-67",
                                              }
                                            }
                                            disableAnimation={false}
                                            htmlFor="message-input"
                                            muiFormControl={
                                              Object {
                                                "adornedStart": false,
                                                "disabled": false,
                                                "error": false,
                                                "filled": false,
                                                "focused": false,
                                                "margin": "normal",
                                                "onBlur": [Function],
                                                "onEmpty": [Function],
                                                "onFilled": [Function],
                                                "onFocus": [Function],
                                                "required": false,
                                                "variant": "standard",
                                              }
                                            }
                                          >
                                            <WithStyles(WithFormControlContext(FormLabel))
                                              className="MuiInputLabel-root-60 MuiInputLabel-formControl-65 MuiInputLabel-animated-68"
                                              classes={
                                                Object {
                                                  "disabled": "MuiInputLabel-disabled-62",
                                                  "error": "MuiInputLabel-error-63",
                                                  "focused": "MuiInputLabel-focused-61",
                                                  "required": "MuiInputLabel-required-64",
                                                }
                                              }
                                              data-shrink={false}
                                              htmlFor="message-input"
                                            >
                                              <WithFormControlContext(FormLabel)
                                                className="MuiInputLabel-root-60 MuiInputLabel-formControl-65 MuiInputLabel-animated-68"
                                                classes={
                                                  Object {
                                                    "asterisk": "MuiFormLabel-asterisk-77",
                                                    "disabled": "MuiFormLabel-disabled-73 MuiInputLabel-disabled-62",
                                                    "error": "MuiFormLabel-error-74 MuiInputLabel-error-63",
                                                    "filled": "MuiFormLabel-filled-75",
                                                    "focused": "MuiFormLabel-focused-72 MuiInputLabel-focused-61",
                                                    "required": "MuiFormLabel-required-76 MuiInputLabel-required-64",
                                                    "root": "MuiFormLabel-root-71",
                                                  }
                                                }
                                                data-shrink={false}
                                                htmlFor="message-input"
                                              >
                                                <FormLabel
                                                  className="MuiInputLabel-root-60 MuiInputLabel-formControl-65 MuiInputLabel-animated-68"
                                                  classes={
                                                    Object {
                                                      "asterisk": "MuiFormLabel-asterisk-77",
                                                      "disabled": "MuiFormLabel-disabled-73 MuiInputLabel-disabled-62",
                                                      "error": "MuiFormLabel-error-74 MuiInputLabel-error-63",
                                                      "filled": "MuiFormLabel-filled-75",
                                                      "focused": "MuiFormLabel-focused-72 MuiInputLabel-focused-61",
                                                      "required": "MuiFormLabel-required-76 MuiInputLabel-required-64",
                                                      "root": "MuiFormLabel-root-71",
                                                    }
                                                  }
                                                  component="label"
                                                  data-shrink={false}
                                                  htmlFor="message-input"
                                                  muiFormControl={
                                                    Object {
                                                      "adornedStart": false,
                                                      "disabled": false,
                                                      "error": false,
                                                      "filled": false,
                                                      "focused": false,
                                                      "margin": "normal",
                                                      "onBlur": [Function],
                                                      "onEmpty": [Function],
                                                      "onFilled": [Function],
                                                      "onFocus": [Function],
                                                      "required": false,
                                                      "variant": "standard",
                                                    }
                                                  }
                                                >
                                                  <label
                                                    className="MuiFormLabel-root-71 MuiInputLabel-root-60 MuiInputLabel-formControl-65 MuiInputLabel-animated-68"
                                                    data-shrink={false}
                                                    htmlFor="message-input"
                                                  >
                                                    Message
                                                  </label>
                                                </FormLabel>
                                              </WithFormControlContext(FormLabel)>
                                            </WithStyles(WithFormControlContext(FormLabel))>
                                          </InputLabel>
                                        </WithFormControlContext(InputLabel)>
                                      </WithStyles(WithFormControlContext(InputLabel))>
                                      <WithStyles(Input)
                                        autoFocus={true}
                                        id="message-input"
                                        name="message-input"
                                        onChange={[Function]}
                                        value=""
                                      >
                                        <Input
                                          autoFocus={true}
                                          classes={
                                            Object {
                                              "disabled": "MuiInput-disabled-81",
                                              "error": "MuiInput-error-83",
                                              "focused": "MuiInput-focused-80",
                                              "formControl": "MuiInput-formControl-79",
                                              "fullWidth": "MuiInput-fullWidth-85",
                                              "input": "MuiInput-input-86",
                                              "inputMarginDense": "MuiInput-inputMarginDense-87",
                                              "inputMultiline": "MuiInput-inputMultiline-88",
                                              "inputType": "MuiInput-inputType-89",
                                              "inputTypeSearch": "MuiInput-inputTypeSearch-90",
                                              "multiline": "MuiInput-multiline-84",
                                              "root": "MuiInput-root-78",
                                              "underline": "MuiInput-underline-82",
                                            }
                                          }
                                          id="message-input"
                                          name="message-input"
                                          onChange={[Function]}
                                          value=""
                                        >
                                          <WithStyles(WithFormControlContext(InputBase))
                                            autoFocus={true}
                                            classes={
                                              Object {
                                                "disabled": "MuiInput-disabled-81",
                                                "error": "MuiInput-error-83",
                                                "focused": "MuiInput-focused-80",
                                                "formControl": "MuiInput-formControl-79",
                                                "fullWidth": "MuiInput-fullWidth-85",
                                                "input": "MuiInput-input-86",
                                                "inputMarginDense": "MuiInput-inputMarginDense-87",
                                                "inputMultiline": "MuiInput-inputMultiline-88",
                                                "inputType": "MuiInput-inputType-89",
                                                "inputTypeSearch": "MuiInput-inputTypeSearch-90",
                                                "multiline": "MuiInput-multiline-84",
                                                "root": "MuiInput-root-78 MuiInput-underline-82",
                                                "underline": null,
                                              }
                                            }
                                            fullWidth={false}
                                            id="message-input"
                                            inputComponent="input"
                                            multiline={false}
                                            name="message-input"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <WithFormControlContext(InputBase)
                                              autoFocus={true}
                                              classes={
                                                Object {
                                                  "adornedEnd": "MuiInputBase-adornedEnd-96",
                                                  "adornedStart": "MuiInputBase-adornedStart-95",
                                                  "disabled": "MuiInputBase-disabled-94 MuiInput-disabled-81",
                                                  "error": "MuiInputBase-error-97 MuiInput-error-83",
                                                  "focused": "MuiInputBase-focused-93 MuiInput-focused-80",
                                                  "formControl": "MuiInputBase-formControl-92 MuiInput-formControl-79",
                                                  "fullWidth": "MuiInputBase-fullWidth-100 MuiInput-fullWidth-85",
                                                  "input": "MuiInputBase-input-101 MuiInput-input-86",
                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-107",
                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart-106",
                                                  "inputMarginDense": "MuiInputBase-inputMarginDense-102 MuiInput-inputMarginDense-87",
                                                  "inputMultiline": "MuiInputBase-inputMultiline-103 MuiInput-inputMultiline-88",
                                                  "inputType": "MuiInputBase-inputType-104 MuiInput-inputType-89",
                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch-105 MuiInput-inputTypeSearch-90",
                                                  "marginDense": "MuiInputBase-marginDense-98",
                                                  "multiline": "MuiInputBase-multiline-99 MuiInput-multiline-84",
                                                  "root": "MuiInputBase-root-91 MuiInput-root-78 MuiInput-underline-82",
                                                }
                                              }
                                              fullWidth={false}
                                              id="message-input"
                                              inputComponent="input"
                                              multiline={false}
                                              name="message-input"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            >
                                              <InputBase
                                                autoFocus={true}
                                                classes={
                                                  Object {
                                                    "adornedEnd": "MuiInputBase-adornedEnd-96",
                                                    "adornedStart": "MuiInputBase-adornedStart-95",
                                                    "disabled": "MuiInputBase-disabled-94 MuiInput-disabled-81",
                                                    "error": "MuiInputBase-error-97 MuiInput-error-83",
                                                    "focused": "MuiInputBase-focused-93 MuiInput-focused-80",
                                                    "formControl": "MuiInputBase-formControl-92 MuiInput-formControl-79",
                                                    "fullWidth": "MuiInputBase-fullWidth-100 MuiInput-fullWidth-85",
                                                    "input": "MuiInputBase-input-101 MuiInput-input-86",
                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-107",
                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart-106",
                                                    "inputMarginDense": "MuiInputBase-inputMarginDense-102 MuiInput-inputMarginDense-87",
                                                    "inputMultiline": "MuiInputBase-inputMultiline-103 MuiInput-inputMultiline-88",
                                                    "inputType": "MuiInputBase-inputType-104 MuiInput-inputType-89",
                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch-105 MuiInput-inputTypeSearch-90",
                                                    "marginDense": "MuiInputBase-marginDense-98",
                                                    "multiline": "MuiInputBase-multiline-99 MuiInput-multiline-84",
                                                    "root": "MuiInputBase-root-91 MuiInput-root-78 MuiInput-underline-82",
                                                  }
                                                }
                                                fullWidth={false}
                                                id="message-input"
                                                inputComponent="input"
                                                muiFormControl={
                                                  Object {
                                                    "adornedStart": false,
                                                    "disabled": false,
                                                    "error": false,
                                                    "filled": false,
                                                    "focused": false,
                                                    "margin": "normal",
                                                    "onBlur": [Function],
                                                    "onEmpty": [Function],
                                                    "onFilled": [Function],
                                                    "onFocus": [Function],
                                                    "required": false,
                                                    "variant": "standard",
                                                  }
                                                }
                                                multiline={false}
                                                name="message-input"
                                                onChange={[Function]}
                                                type="text"
                                                value=""
                                              >
                                                <div
                                                  className="MuiInputBase-root-91 MuiInput-root-78 MuiInput-underline-82 MuiInputBase-formControl-92 MuiInput-formControl-79"
                                                  onClick={[Function]}
                                                >
                                                  <input
                                                    aria-invalid={false}
                                                    autoFocus={true}
                                                    className="MuiInputBase-input-101 MuiInput-input-86"
                                                    disabled={false}
                                                    id="message-input"
                                                    name="message-input"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    required={false}
                                                    type="text"
                                                    value=""
                                                  />
                                                </div>
                                              </InputBase>
                                            </WithFormControlContext(InputBase)>
                                          </WithStyles(WithFormControlContext(InputBase))>
                                        </Input>
                                      </WithStyles(Input)>
                                    </div>
                                  </FormControl>
                                </WithStyles(FormControl)>
                              </TextField>
                            </StyledComponent>
                          </Styled(TextField)>
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </div>
                </StyledComponent>
              </styled.div>
            </div>
          </StyledComponent>
        </styled.div>
      </Chat>
    </Connect(Chat)>
  </WithStyles(Connect(Chat))>
</Provider>
`;

exports[`Chat should render connected component without messages 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "storeState": Object {
        "chat": Object {
          "messages": Array [],
          "writingNotifications": Array [],
        },
        "signaling": Object {
          "isInitiator": true,
        },
        "user": Object {
          "avatar": "metal",
          "id": 42,
          "name": "Dude",
        },
      },
    }
  }
>
  <WithStyles(Connect(Chat)) />
</ContextProvider>
`;
